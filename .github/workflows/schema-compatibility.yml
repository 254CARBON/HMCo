name: Schema Compatibility Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'sdk/uis/schema/**'
      - 'services/*/schemas/**'

jobs:
  schema-compatibility:
    name: Check Schema Compatibility
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema
    
    - name: Validate UIS Schema
      run: |
        python -c "
        import json
        import jsonschema
        
        # Load and validate UIS 1.2 schema
        with open('sdk/uis/schema/uis-1.2.json', 'r') as f:
            schema = json.load(f)
        
        # Validate schema is valid JSON Schema
        try:
            jsonschema.Draft7Validator.check_schema(schema)
            print('✓ UIS 1.2 schema is valid')
        except jsonschema.SchemaError as e:
            print(f'✗ Schema validation failed: {e}')
            exit(1)
        "
    
    - name: Check Backward Compatibility
      run: |
        python -c "
        import json
        
        # Load both schemas
        with open('sdk/uis/schema/uis-1.1.json', 'r') as f:
            v11 = json.load(f)
        
        with open('sdk/uis/schema/uis-1.2.json', 'r') as f:
            v12 = json.load(f)
        
        # Check that v1.2 is backward compatible with v1.1
        # All required fields in v1.1 must be in v1.2
        v11_required = set(v11.get('required', []))
        v12_required = set(v12.get('required', []))
        
        if not v11_required.issubset(v12_required):
            missing = v11_required - v12_required
            print(f'✗ Backward incompatible: missing required fields {missing}')
            exit(1)
        
        print('✓ Schema is backward compatible')
        "
    
    - name: Check for Breaking Changes
      run: |
        echo "Checking for breaking schema changes..."
        # Compare schemas and identify breaking changes
        python -c "
        import json
        
        with open('sdk/uis/schema/uis-1.1.json', 'r') as f:
            old_schema = json.load(f)
        
        with open('sdk/uis/schema/uis-1.2.json', 'r') as f:
            new_schema = json.load(f)
        
        # Get properties
        old_props = set(old_schema.get('properties', {}).keys())
        new_props = set(new_schema.get('properties', {}).keys())
        
        # Check for removed properties
        removed = old_props - new_props
        if removed:
            print(f'⚠️  Warning: Removed properties: {removed}')
        
        # Check for added properties
        added = new_props - old_props
        if added:
            print(f'✓ Added properties: {added}')
        
        print('✓ Schema change check complete')
        "
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Schema compatibility check passed! Changes are backward compatible.'
          })
