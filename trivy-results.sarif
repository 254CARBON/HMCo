{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2024-33663",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-jose: algorithm confusion with OpenSSH ECDSA keys and other key formats"
              },
              "fullDescription": {
                "text": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33663",
              "help": {
                "text": "Vulnerability CVE-2024-33663\\nSeverity: CRITICAL\\nPackage: python-jose\\nFixed Version: 3.4.0\\nLink: [CVE-2024-33663](https://avd.aquasec.com/nvd/cve-2024-33663)\\npython-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217.",
                "markdown": "**Vulnerability CVE-2024-33663**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|CRITICAL|python-jose|3.4.0|[CVE-2024-33663](https://avd.aquasec.com/nvd/cve-2024-33663)|\\n\\npython-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-33664",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-jose: allows attackers to cause a denial of service"
              },
              "fullDescription": {
                "text": "python-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \u0026#34;JWT bomb.\u0026#34; This is similar to CVE-2024-21319."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33664",
              "help": {
                "text": "Vulnerability CVE-2024-33664\\nSeverity: MEDIUM\\nPackage: python-jose\\nFixed Version: 3.4.0\\nLink: [CVE-2024-33664](https://avd.aquasec.com/nvd/cve-2024-33664)\\npython-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319.",
                "markdown": "**Vulnerability CVE-2024-33664**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|python-jose|3.4.0|[CVE-2024-33664](https://avd.aquasec.com/nvd/cve-2024-33664)|\\n\\npython-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-24762",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "`python-multipart` is a streaming multipart parser for Python. When us ..."
              },
              "fullDescription": {
                "text": "`python-multipart` is a streaming multipart parser for Python. When using form data, `python-multipart` uses a Regular Expression to parse the HTTP `Content-Type` header, including options. An attacker could send a custom-made `Content-Type` option that is very difficult for the RegEx to process, consuming CPU resources and stalling indefinitely (minutes or more) while holding the main event loop. This means that process can\u0026#39;t handle any more requests, leading to regular expression denial of service. This vulnerability has been patched in version 0.0.7."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-24762",
              "help": {
                "text": "Vulnerability CVE-2024-24762\\nSeverity: HIGH\\nPackage: python-multipart\\nFixed Version: 0.0.7\\nLink: [CVE-2024-24762](https://avd.aquasec.com/nvd/cve-2024-24762)\\n`python-multipart` is a streaming multipart parser for Python. When using form data, `python-multipart` uses a Regular Expression to parse the HTTP `Content-Type` header, including options. An attacker could send a custom-made `Content-Type` option that is very difficult for the RegEx to process, consuming CPU resources and stalling indefinitely (minutes or more) while holding the main event loop. This means that process can't handle any more requests, leading to regular expression denial of service. This vulnerability has been patched in version 0.0.7.",
                "markdown": "**Vulnerability CVE-2024-24762**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|python-multipart|0.0.7|[CVE-2024-24762](https://avd.aquasec.com/nvd/cve-2024-24762)|\\n\\n`python-multipart` is a streaming multipart parser for Python. When using form data, `python-multipart` uses a Regular Expression to parse the HTTP `Content-Type` header, including options. An attacker could send a custom-made `Content-Type` option that is very difficult for the RegEx to process, consuming CPU resources and stalling indefinitely (minutes or more) while holding the main event loop. This means that process can't handle any more requests, leading to regular expression denial of service. This vulnerability has been patched in version 0.0.7."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-53981",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-multipart: python-multipart has a DoS via deformation `multipart/form-data` boundary"
              },
              "fullDescription": {
                "text": "python-multipart is a streaming multipart parser for Python. When parsing form data, python-multipart skips line breaks (CR \\r or LF \\n) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs. An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS). This vulnerability is fixed in 0.0.18."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-53981",
              "help": {
                "text": "Vulnerability CVE-2024-53981\\nSeverity: HIGH\\nPackage: python-multipart\\nFixed Version: 0.0.18\\nLink: [CVE-2024-53981](https://avd.aquasec.com/nvd/cve-2024-53981)\\npython-multipart is a streaming multipart parser for Python. When parsing form data, python-multipart skips line breaks (CR \\r or LF \\n) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs. An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS). This vulnerability is fixed in 0.0.18.",
                "markdown": "**Vulnerability CVE-2024-53981**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|python-multipart|0.0.18|[CVE-2024-53981](https://avd.aquasec.com/nvd/cve-2024-53981)|\\n\\npython-multipart is a streaming multipart parser for Python. When parsing form data, python-multipart skips line breaks (CR \\r or LF \\n) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs. An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS). This vulnerability is fixed in 0.0.18."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-22195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: HTML attribute injection when passing user input as keys to xmlattr filter"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-22195",
              "help": {
                "text": "Vulnerability CVE-2024-22195\\nSeverity: MEDIUM\\nPackage: jinja2\\nFixed Version: 3.1.3\\nLink: [CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)\\nJinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.",
                "markdown": "**Vulnerability CVE-2024-22195**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|jinja2|3.1.3|[CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)|\\n\\nJinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-34064",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: accepts keys containing non-attribute characters"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u0026gt;`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-34064",
              "help": {
                "text": "Vulnerability CVE-2024-34064\\nSeverity: MEDIUM\\nPackage: jinja2\\nFixed Version: 3.1.4\\nLink: [CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)\\nJinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4.",
                "markdown": "**Vulnerability CVE-2024-34064**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|jinja2|3.1.4|[CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)|\\n\\nJinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-56201",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: Jinja has a sandbox breakout through malicious filenames"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. In versions on the 3.x branch prior to 3.1.5, a bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja\u0026#39;s sandbox is used. To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename. This vulnerability is fixed in 3.1.5."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-56201",
              "help": {
                "text": "Vulnerability CVE-2024-56201\\nSeverity: MEDIUM\\nPackage: jinja2\\nFixed Version: 3.1.5\\nLink: [CVE-2024-56201](https://avd.aquasec.com/nvd/cve-2024-56201)\\nJinja is an extensible templating engine. In versions on the 3.x branch prior to 3.1.5, a bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used. To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename. This vulnerability is fixed in 3.1.5.",
                "markdown": "**Vulnerability CVE-2024-56201**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|jinja2|3.1.5|[CVE-2024-56201](https://avd.aquasec.com/nvd/cve-2024-56201)|\\n\\nJinja is an extensible templating engine. In versions on the 3.x branch prior to 3.1.5, a bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used. To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename. This vulnerability is fixed in 3.1.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-56326",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: Jinja has a sandbox breakout through indirect reference to format method"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja\u0026#39;s sandbox does catch calls to str.format and ensures they don\u0026#39;t escape the sandbox. However, it\u0026#39;s possible to store a reference to a malicious string\u0026#39;s format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-56326",
              "help": {
                "text": "Vulnerability CVE-2024-56326\\nSeverity: MEDIUM\\nPackage: jinja2\\nFixed Version: 3.1.5\\nLink: [CVE-2024-56326](https://avd.aquasec.com/nvd/cve-2024-56326)\\nJinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5.",
                "markdown": "**Vulnerability CVE-2024-56326**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|jinja2|3.1.5|[CVE-2024-56326](https://avd.aquasec.com/nvd/cve-2024-56326)|\\n\\nJinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2025-27516",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "jinja2: Jinja sandbox breakout through attr filter selecting format method"
              },
              "fullDescription": {
                "text": "Jinja is an extensible templating engine. Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja\u0026#39;s sandbox does catch calls to str.format and ensures they don\u0026#39;t escape the sandbox. However, it\u0026#39;s possible to use the |attr filter to get a reference to a string\u0026#39;s plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment\u0026#39;s attribute lookup. This vulnerability is fixed in 3.1.6."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-27516",
              "help": {
                "text": "Vulnerability CVE-2025-27516\\nSeverity: MEDIUM\\nPackage: jinja2\\nFixed Version: 3.1.6\\nLink: [CVE-2025-27516](https://avd.aquasec.com/nvd/cve-2025-27516)\\nJinja is an extensible templating engine. Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to use the |attr filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment's attribute lookup. This vulnerability is fixed in 3.1.6.",
                "markdown": "**Vulnerability CVE-2025-27516**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|jinja2|3.1.6|[CVE-2025-27516](https://avd.aquasec.com/nvd/cve-2025-27516)|\\n\\nJinja is an extensible templating engine. Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to use the |attr filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment's attribute lookup. This vulnerability is fixed in 3.1.6."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-35195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "requests: subsequent requests to the same host ignore cert verification"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-35195",
              "help": {
                "text": "Vulnerability CVE-2024-35195\\nSeverity: MEDIUM\\nPackage: requests\\nFixed Version: 2.32.0\\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)\\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
                "markdown": "**Vulnerability CVE-2024-35195**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|requests|2.32.0|[CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)|\\n\\nRequests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-47081",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "requests: Requests vulnerable to .netrc credentials leak via malicious URLs"
              },
              "fullDescription": {
                "text": "Requests is a HTTP library. Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs. Users should upgrade to version 2.32.4 to receive a fix. For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on one\u0026#39;s Requests Session."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-47081",
              "help": {
                "text": "Vulnerability CVE-2024-47081\\nSeverity: MEDIUM\\nPackage: requests\\nFixed Version: 2.32.4\\nLink: [CVE-2024-47081](https://avd.aquasec.com/nvd/cve-2024-47081)\\nRequests is a HTTP library. Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs. Users should upgrade to version 2.32.4 to receive a fix. For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on one's Requests Session.",
                "markdown": "**Vulnerability CVE-2024-47081**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|requests|2.32.4|[CVE-2024-47081](https://avd.aquasec.com/nvd/cve-2024-47081)|\\n\\nRequests is a HTTP library. Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs. Users should upgrade to version 2.32.4 to receive a fix. For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on one's Requests Session."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2023-50782",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-cryptography: Bleichenbacher timing oracle attack against RSA decryption - incomplete fix for CVE-2020-25659"
              },
              "fullDescription": {
                "text": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-50782",
              "help": {
                "text": "Vulnerability CVE-2023-50782\\nSeverity: HIGH\\nPackage: cryptography\\nFixed Version: 42.0.0\\nLink: [CVE-2023-50782](https://avd.aquasec.com/nvd/cve-2023-50782)\\nA flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.",
                "markdown": "**Vulnerability CVE-2023-50782**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|cryptography|42.0.0|[CVE-2023-50782](https://avd.aquasec.com/nvd/cve-2023-50782)|\\n\\nA flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-26130",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "python-cryptography: NULL pointer dereference with pkcs12.serialize_key_and_certificates when called with a non-matching certificate and private key and an hmac_hash override"
              },
              "fullDescription": {
                "text": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Starting in version 38.0.0 and prior to version 42.0.4, if `pkcs12.serialize_key_and_certificates` is called with both a certificate whose public key did not match the provided private key and an `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`, then a NULL pointer dereference would occur, crashing the Python process. This has been resolved in version 42.0.4, the first version in which a `ValueError` is properly raised."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-26130",
              "help": {
                "text": "Vulnerability CVE-2024-26130\\nSeverity: HIGH\\nPackage: cryptography\\nFixed Version: 42.0.4\\nLink: [CVE-2024-26130](https://avd.aquasec.com/nvd/cve-2024-26130)\\ncryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Starting in version 38.0.0 and prior to version 42.0.4, if `pkcs12.serialize_key_and_certificates` is called with both a certificate whose public key did not match the provided private key and an `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`, then a NULL pointer dereference would occur, crashing the Python process. This has been resolved in version 42.0.4, the first version in which a `ValueError` is properly raised.",
                "markdown": "**Vulnerability CVE-2024-26130**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|cryptography|42.0.4|[CVE-2024-26130](https://avd.aquasec.com/nvd/cve-2024-26130)|\\n\\ncryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Starting in version 38.0.0 and prior to version 42.0.4, if `pkcs12.serialize_key_and_certificates` is called with both a certificate whose public key did not match the provided private key and an `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`, then a NULL pointer dereference would occur, crashing the Python process. This has been resolved in version 42.0.4, the first version in which a `ValueError` is properly raised."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-0727",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "openssl: denial of service via null dereference"
              },
              "fullDescription": {
                "text": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-0727",
              "help": {
                "text": "Vulnerability CVE-2024-0727\\nSeverity: MEDIUM\\nPackage: cryptography\\nFixed Version: 42.0.2\\nLink: [CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)\\nIssue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
                "markdown": "**Vulnerability CVE-2024-0727**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|cryptography|42.0.2|[CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)|\\n\\nIssue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "GHSA-h4gh-qq45-vh27",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyca/cryptography has a vulnerable OpenSSL included in cryptography wheels"
              },
              "fullDescription": {
                "text": "pyca/cryptography\u0026#39;s wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.\n\nIf you are building cryptography source (\u0026#34;sdist\u0026#34;) then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-h4gh-qq45-vh27",
              "help": {
                "text": "Vulnerability GHSA-h4gh-qq45-vh27\\nSeverity: MEDIUM\\nPackage: cryptography\\nFixed Version: 43.0.1\\nLink: [GHSA-h4gh-qq45-vh27](https://github.com/advisories/GHSA-h4gh-qq45-vh27)\\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.\n",
                "markdown": "**Vulnerability GHSA-h4gh-qq45-vh27**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|cryptography|43.0.1|[GHSA-h4gh-qq45-vh27](https://github.com/advisories/GHSA-h4gh-qq45-vh27)|\\n\\npyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-8019",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "PyTorch Lightning path traversal vulnerability"
              },
              "fullDescription": {
                "text": "In lightning-ai/pytorch-lightning version 2.3.2, a vulnerability exists in the `LightningApp` when running on a Windows host. The vulnerability occurs at the `/api/v1/upload_file/` endpoint, allowing an attacker to write or overwrite arbitrary files by providing a crafted filename. This can lead to potential remote code execution (RCE) by overwriting critical files or placing malicious files in sensitive locations."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-8019",
              "help": {
                "text": "Vulnerability CVE-2024-8019\\nSeverity: CRITICAL\\nPackage: pytorch-lightning\\nFixed Version: 2.4.0\\nLink: [CVE-2024-8019](https://avd.aquasec.com/nvd/cve-2024-8019)\\nIn lightning-ai/pytorch-lightning version 2.3.2, a vulnerability exists in the `LightningApp` when running on a Windows host. The vulnerability occurs at the `/api/v1/upload_file/` endpoint, allowing an attacker to write or overwrite arbitrary files by providing a crafted filename. This can lead to potential remote code execution (RCE) by overwriting critical files or placing malicious files in sensitive locations.",
                "markdown": "**Vulnerability CVE-2024-8019**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|CRITICAL|pytorch-lightning|2.4.0|[CVE-2024-8019](https://avd.aquasec.com/nvd/cve-2024-8019)|\\n\\nIn lightning-ai/pytorch-lightning version 2.3.2, a vulnerability exists in the `LightningApp` when running on a Windows host. The vulnerability occurs at the `/api/v1/upload_file/` endpoint, allowing an attacker to write or overwrite arbitrary files by providing a crafted filename. This can lead to potential remote code execution (RCE) by overwriting critical files or placing malicious files in sensitive locations."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-8020",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pytorch-lightning: Denial of Service in lightning-ai/pytorch-lightning"
              },
              "fullDescription": {
                "text": "A vulnerability in lightning-ai/pytorch-lightning version 2.3.2 allows an attacker to cause a denial of service by sending an unexpected POST request to the `/api/v1/state` endpoint of `LightningApp`. This issue occurs due to improper handling of unexpected state values, which results in the server shutting down."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-8020",
              "help": {
                "text": "Vulnerability CVE-2024-8020\\nSeverity: HIGH\\nPackage: pytorch-lightning\\nFixed Version: \\nLink: [CVE-2024-8020](https://avd.aquasec.com/nvd/cve-2024-8020)\\nA vulnerability in lightning-ai/pytorch-lightning version 2.3.2 allows an attacker to cause a denial of service by sending an unexpected POST request to the `/api/v1/state` endpoint of `LightningApp`. This issue occurs due to improper handling of unexpected state values, which results in the server shutting down.",
                "markdown": "**Vulnerability CVE-2024-8020**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|pytorch-lightning||[CVE-2024-8020](https://avd.aquasec.com/nvd/cve-2024-8020)|\\n\\nA vulnerability in lightning-ai/pytorch-lightning version 2.3.2 allows an attacker to cause a denial of service by sending an unexpected POST request to the `/api/v1/state` endpoint of `LightningApp`. This issue occurs due to improper handling of unexpected state values, which results in the server shutting down."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-32434",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "PyTorch is a Python package that provides tensor computation with stro ..."
              },
              "fullDescription": {
                "text": "PyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. In version 2.5.1 and prior, a Remote Command Execution (RCE) vulnerability exists in PyTorch when loading a model using torch.load with weights_only=True. This issue has been patched in version 2.6.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-32434",
              "help": {
                "text": "Vulnerability CVE-2025-32434\\nSeverity: CRITICAL\\nPackage: torch\\nFixed Version: 2.6.0\\nLink: [CVE-2025-32434](https://avd.aquasec.com/nvd/cve-2025-32434)\\nPyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. In version 2.5.1 and prior, a Remote Command Execution (RCE) vulnerability exists in PyTorch when loading a model using torch.load with weights_only=True. This issue has been patched in version 2.6.0.",
                "markdown": "**Vulnerability CVE-2025-32434**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|CRITICAL|torch|2.6.0|[CVE-2025-32434](https://avd.aquasec.com/nvd/cve-2025-32434)|\\n\\nPyTorch is a Python package that provides tensor computation with strong GPU acceleration and deep neural networks built on a tape-based autograd system. In version 2.5.1 and prior, a Remote Command Execution (RCE) vulnerability exists in PyTorch when loading a model using torch.load with weights_only=True. This issue has been patched in version 2.6.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2024-31580",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "PyTorch before v2.2.0 was discovered to contain a heap buffer overflow ..."
              },
              "fullDescription": {
                "text": "PyTorch before v2.2.0 was discovered to contain a heap buffer overflow vulnerability in the component /runtime/vararg_functions.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-31580",
              "help": {
                "text": "Vulnerability CVE-2024-31580\\nSeverity: HIGH\\nPackage: torch\\nFixed Version: 2.2.0\\nLink: [CVE-2024-31580](https://avd.aquasec.com/nvd/cve-2024-31580)\\nPyTorch before v2.2.0 was discovered to contain a heap buffer overflow vulnerability in the component /runtime/vararg_functions.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.",
                "markdown": "**Vulnerability CVE-2024-31580**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|torch|2.2.0|[CVE-2024-31580](https://avd.aquasec.com/nvd/cve-2024-31580)|\\n\\nPyTorch before v2.2.0 was discovered to contain a heap buffer overflow vulnerability in the component /runtime/vararg_functions.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-31583",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Pytorch before version v2.2.0 was discovered to contain a use-after-fr ..."
              },
              "fullDescription": {
                "text": "Pytorch before version v2.2.0 was discovered to contain a use-after-free vulnerability in torch/csrc/jit/mobile/interpreter.cpp."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-31583",
              "help": {
                "text": "Vulnerability CVE-2024-31583\\nSeverity: HIGH\\nPackage: torch\\nFixed Version: 2.2.0\\nLink: [CVE-2024-31583](https://avd.aquasec.com/nvd/cve-2024-31583)\\nPytorch before version v2.2.0 was discovered to contain a use-after-free vulnerability in torch/csrc/jit/mobile/interpreter.cpp.",
                "markdown": "**Vulnerability CVE-2024-31583**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|torch|2.2.0|[CVE-2024-31583](https://avd.aquasec.com/nvd/cve-2024-31583)|\\n\\nPytorch before version v2.2.0 was discovered to contain a use-after-free vulnerability in torch/csrc/jit/mobile/interpreter.cpp."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2025-3730",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "A vulnerability, which was classified as problematic, was found in PyT ..."
              },
              "fullDescription": {
                "text": "A vulnerability, which was classified as problematic, was found in PyTorch 2.6.0. Affected is the function torch.nn.functional.ctc_loss of the file aten/src/ATen/native/LossCTC.cpp. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The name of the patch is 46fc5d8e360127361211cb237d5f9eef0223e567. It is recommended to apply a patch to fix this issue. The security policy of the project warns to use unknown models which might establish malicious effects."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-3730",
              "help": {
                "text": "Vulnerability CVE-2025-3730\\nSeverity: MEDIUM\\nPackage: torch\\nFixed Version: 2.8.0\\nLink: [CVE-2025-3730](https://avd.aquasec.com/nvd/cve-2025-3730)\\nA vulnerability, which was classified as problematic, was found in PyTorch 2.6.0. Affected is the function torch.nn.functional.ctc_loss of the file aten/src/ATen/native/LossCTC.cpp. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The name of the patch is 46fc5d8e360127361211cb237d5f9eef0223e567. It is recommended to apply a patch to fix this issue. The security policy of the project warns to use unknown models which might establish malicious effects.",
                "markdown": "**Vulnerability CVE-2025-3730**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|MEDIUM|torch|2.8.0|[CVE-2025-3730](https://avd.aquasec.com/nvd/cve-2025-3730)|\\n\\nA vulnerability, which was classified as problematic, was found in PyTorch 2.6.0. Affected is the function torch.nn.functional.ctc_loss of the file aten/src/ATen/native/LossCTC.cpp. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The name of the patch is 46fc5d8e360127361211cb237d5f9eef0223e567. It is recommended to apply a patch to fix this issue. The security policy of the project warns to use unknown models which might establish malicious effects."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2025-2953",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "torch: PyTorch torch.mkldnn_max_pool2d denial of service"
              },
              "fullDescription": {
                "text": "A vulnerability, which was classified as problematic, has been found in PyTorch 2.6.0+cu124. Affected by this issue is the function torch.mkldnn_max_pool2d. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The security policy of the project warns to use unknown models which might establish malicious effects."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2025-2953",
              "help": {
                "text": "Vulnerability CVE-2025-2953\\nSeverity: LOW\\nPackage: torch\\nFixed Version: 2.7.1-rc1\\nLink: [CVE-2025-2953](https://avd.aquasec.com/nvd/cve-2025-2953)\\nA vulnerability, which was classified as problematic, has been found in PyTorch 2.6.0+cu124. Affected by this issue is the function torch.mkldnn_max_pool2d. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The security policy of the project warns to use unknown models which might establish malicious effects.",
                "markdown": "**Vulnerability CVE-2025-2953**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|LOW|torch|2.7.1-rc1|[CVE-2025-2953](https://avd.aquasec.com/nvd/cve-2025-2953)|\\n\\nA vulnerability, which was classified as problematic, has been found in PyTorch 2.6.0+cu124. Affected by this issue is the function torch.mkldnn_max_pool2d. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The security policy of the project warns to use unknown models which might establish malicious effects."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-4340",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "sqlparse: parsing heavily nested list leads to denial of service"
              },
              "fullDescription": {
                "text": "Passing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4340",
              "help": {
                "text": "Vulnerability CVE-2024-4340\\nSeverity: HIGH\\nPackage: sqlparse\\nFixed Version: 0.5.0\\nLink: [CVE-2024-4340](https://avd.aquasec.com/nvd/cve-2024-4340)\\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n",
                "markdown": "**Vulnerability CVE-2024-4340**\\n| Severity | Package | Fixed Version | Link |\\n| --- | --- | --- | --- |\\n|HIGH|sqlparse|0.5.0|[CVE-2024-4340](https://avd.aquasec.com/nvd/cve-2024-4340)|\\n\\nPassing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "private-key",
              "name": "Secret",
              "shortDescription": {
                "text": "Asymmetric Private Key"
              },
              "fullDescription": {
                "text
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/secret/builtin-rules.go",
              "help": {
                "text": "Secret Asymmetric Private Key\\nSeverity: HIGH\\nMatch
                "markdown": "**Secret Asymmetric Private Key**\\n| Severity | Match |\\n| --- | --- |\\n|HIGH||"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "secret",
                  "security",
                  "HIGH"
                ]
              }
            }
          ],
          "version": "0.48.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-33663",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: python-jose\\nInstalled Version: 3.3.0\\nVulnerability CVE-2024-33663\\nSeverity: CRITICAL\\nFixed Version: 3.4.0\\nLink: [CVE-2024-33663](https://avd.aquasec.com/nvd/cve-2024-33663)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/data-sharing/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/data-sharing/requirements.txt: python-jose@3.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33664",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Package: python-jose\\nInstalled Version: 3.3.0\\nVulnerability CVE-2024-33664\\nSeverity: MEDIUM\\nFixed Version: 3.4.0\\nLink: [CVE-2024-33664](https://avd.aquasec.com/nvd/cve-2024-33664)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/data-sharing/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/data-sharing/requirements.txt: python-jose@3.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-24762",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: python-multipart\\nInstalled Version: 0.0.6\\nVulnerability CVE-2024-24762\\nSeverity: HIGH\\nFixed Version: 0.0.7\\nLink: [CVE-2024-24762](https://avd.aquasec.com/nvd/cve-2024-24762)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/data-sharing/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/data-sharing/requirements.txt: python-multipart@0.0.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-53981",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: python-multipart\\nInstalled Version: 0.0.6\\nVulnerability CVE-2024-53981\\nSeverity: HIGH\\nFixed Version: 0.0.18\\nLink: [CVE-2024-53981](https://avd.aquasec.com/nvd/cve-2024-53981)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/data-sharing/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/data-sharing/requirements.txt: python-multipart@0.0.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-22195",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\\nInstalled Version: 3.1.2\\nVulnerability CVE-2024-22195\\nSeverity: MEDIUM\\nFixed Version: 3.1.3\\nLink: [CVE-2024-22195](https://avd.aquasec.com/nvd/cve-2024-22195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: jinja2@3.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-34064",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\\nInstalled Version: 3.1.2\\nVulnerability CVE-2024-34064\\nSeverity: MEDIUM\\nFixed Version: 3.1.4\\nLink: [CVE-2024-34064](https://avd.aquasec.com/nvd/cve-2024-34064)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: jinja2@3.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-56201",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\\nInstalled Version: 3.1.2\\nVulnerability CVE-2024-56201\\nSeverity: MEDIUM\\nFixed Version: 3.1.5\\nLink: [CVE-2024-56201](https://avd.aquasec.com/nvd/cve-2024-56201)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: jinja2@3.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-56326",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\\nInstalled Version: 3.1.2\\nVulnerability CVE-2024-56326\\nSeverity: MEDIUM\\nFixed Version: 3.1.5\\nLink: [CVE-2024-56326](https://avd.aquasec.com/nvd/cve-2024-56326)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: jinja2@3.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-27516",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\\nInstalled Version: 3.1.2\\nVulnerability CVE-2025-27516\\nSeverity: MEDIUM\\nFixed Version: 3.1.6\\nLink: [CVE-2025-27516](https://avd.aquasec.com/nvd/cve-2025-27516)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: jinja2@3.1.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: requests\\nInstalled Version: 2.31.0\\nVulnerability CVE-2024-35195\\nSeverity: MEDIUM\\nFixed Version: 2.32.0\\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: requests@2.31.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47081",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: requests\\nInstalled Version: 2.31.0\\nVulnerability CVE-2024-47081\\nSeverity: MEDIUM\\nFixed Version: 2.32.4\\nLink: [CVE-2024-47081](https://avd.aquasec.com/nvd/cve-2024-47081)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/iceberg-autopilot/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/iceberg-autopilot/requirements.txt: requests@2.31.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-50782",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Package: cryptography\\nInstalled Version: 41.0.7\\nVulnerability CVE-2023-50782\\nSeverity: HIGH\\nFixed Version: 42.0.0\\nLink: [CVE-2023-50782](https://avd.aquasec.com/nvd/cve-2023-50782)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/federation-gateway/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/federation-gateway/requirements.txt: cryptography@41.0.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26130",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: cryptography\\nInstalled Version: 41.0.7\\nVulnerability CVE-2024-26130\\nSeverity: HIGH\\nFixed Version: 42.0.4\\nLink: [CVE-2024-26130](https://avd.aquasec.com/nvd/cve-2024-26130)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/federation-gateway/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/federation-gateway/requirements.txt: cryptography@41.0.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-0727",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: cryptography\\nInstalled Version: 41.0.7\\nVulnerability CVE-2024-0727\\nSeverity: MEDIUM\\nFixed Version: 42.0.2\\nLink: [CVE-2024-0727](https://avd.aquasec.com/nvd/cve-2024-0727)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/federation-gateway/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/federation-gateway/requirements.txt: cryptography@41.0.7"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-h4gh-qq45-vh27",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Package: cryptography\\nInstalled Version: 41.0.7\\nVulnerability GHSA-h4gh-qq45-vh27\\nSeverity: MEDIUM\\nFixed Version: 43.0.1\\nLink: [GHSA-h4gh-qq45-vh27](https://github.com/advisories/GHSA-h4gh-qq45-vh27)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/federation-gateway/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/federation-gateway/requirements.txt: cryptography@41.0.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-8019",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: pytorch-lightning\\nInstalled Version: 2.1.0\\nVulnerability CVE-2024-8019\\nSeverity: CRITICAL\\nFixed Version: 2.4.0\\nLink: [CVE-2024-8019](https://avd.aquasec.com/nvd/cve-2024-8019)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: pytorch-lightning@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-8020",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: pytorch-lightning\\nInstalled Version: 2.1.0\\nVulnerability CVE-2024-8020\\nSeverity: HIGH\\nFixed Version: \\nLink: [CVE-2024-8020](https://avd.aquasec.com/nvd/cve-2024-8020)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: pytorch-lightning@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-32434",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Package: torch\\nInstalled Version: 2.1.0\\nVulnerability CVE-2025-32434\\nSeverity: CRITICAL\\nFixed Version: 2.6.0\\nLink: [CVE-2025-32434](https://avd.aquasec.com/nvd/cve-2025-32434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: torch@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-31580",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Package: torch\\nInstalled Version: 2.1.0\\nVulnerability CVE-2024-31580\\nSeverity: HIGH\\nFixed Version: 2.2.0\\nLink: [CVE-2024-31580](https://avd.aquasec.com/nvd/cve-2024-31580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: torch@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-31583",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "text": "Package: torch\\nInstalled Version: 2.1.0\\nVulnerability CVE-2024-31583\\nSeverity: HIGH\\nFixed Version: 2.2.0\\nLink: [CVE-2024-31583](https://avd.aquasec.com/nvd/cve-2024-31583)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: torch@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3730",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "Package: torch\\nInstalled Version: 2.1.0\\nVulnerability CVE-2025-3730\\nSeverity: MEDIUM\\nFixed Version: 2.8.0\\nLink: [CVE-2025-3730](https://avd.aquasec.com/nvd/cve-2025-3730)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: torch@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-2953",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Package: torch\\nInstalled Version: 2.1.0\\nVulnerability CVE-2025-2953\\nSeverity: LOW\\nFixed Version: 2.7.1-rc1\\nLink: [CVE-2025-2953](https://avd.aquasec.com/nvd/cve-2025-2953)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/lmp-nowcast-api/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/lmp-nowcast-api/requirements.txt: torch@2.1.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4340",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: sqlparse\\nInstalled Version: 0.4.4\\nVulnerability CVE-2024-4340\\nSeverity: HIGH\\nFixed Version: 0.5.0\\nLink: [CVE-2024-4340](https://avd.aquasec.com/nvd/cve-2024-4340)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/query-rewriter/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/query-rewriter/requirements.txt: sqlparse@0.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4340",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: sqlparse\\nInstalled Version: 0.4.4\\nVulnerability CVE-2024-4340\\nSeverity: HIGH\\nFixed Version: 0.5.0\\nLink: [CVE-2024-4340](https://avd.aquasec.com/nvd/cve-2024-4340)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/ch-mv-optimizer/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/ch-mv-optimizer/requirements.txt: sqlparse@0.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4340",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: sqlparse\\nInstalled Version: 0.4.4\\nVulnerability CVE-2024-4340\\nSeverity: HIGH\\nFixed Version: 0.5.0\\nLink: [CVE-2024-4340](https://avd.aquasec.com/nvd/cve-2024-4340)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/cost-coach/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/cost-coach/requirements.txt: sqlparse@0.4.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: requests\\nInstalled Version: 2.31.0\\nVulnerability CVE-2024-35195\\nSeverity: MEDIUM\\nFixed Version: 2.32.0\\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/data-classifier/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/data-classifier/requirements.txt: requests@2.31.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47081",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: requests\\nInstalled Version: 2.31.0\\nVulnerability CVE-2024-47081\\nSeverity: MEDIUM\\nFixed Version: 2.32.4\\nLink: [CVE-2024-47081](https://avd.aquasec.com/nvd/cve-2024-47081)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "services/data-classifier/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "services/data-classifier/requirements.txt: requests@2.31.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: requests\\nInstalled Version: 2.31.0\\nVulnerability CVE-2024-35195\\nSeverity: MEDIUM\\nFixed Version: 2.32.0\\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "tests/requirements.txt: requests@2.31.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47081",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: requests\\nInstalled Version: 2.31.0\\nVulnerability CVE-2024-47081\\nSeverity: MEDIUM\\nFixed Version: 2.32.4\\nLink: [CVE-2024-47081](https://avd.aquasec.com/nvd/cve-2024-47081)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "tests/requirements.txt: requests@2.31.0"
              }
            }
          ]
        },
        {
          "ruleId": "private-key",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Artifact: old-networking-templates/nginx-ingress.yaml\\nType: \\nSecret Asymmetric Private Key\\nSeverity: HIGH\\nMatch
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "old-networking-templates/nginx-ingress.yaml",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 1,
                  "endLine": 369,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "old-networking-templates/nginx-ingress.yaml"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///home/runner/work/HMCo/HMCo/"
        }
      }
    }
  ]
}