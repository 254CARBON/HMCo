apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal-services
  namespace: data-platform
  labels:
    {{- include "portal-services.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "portal-services.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "portal-services.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "portal-services.serviceAccountName" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: portal-services
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: CONFIG_PATH
          value: "/config/services.json"
        {{- if .Values.cloudflareAccess.enabled }}
        - name: CF_ACCESS_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: cloudflare-access-service-token
              key: client_id
        - name: CF_ACCESS_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: cloudflare-access-service-token
              key: client_secret
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: npm-cache
          mountPath: /.npm
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: portal-services-registry
      - name: tmp
        emptyDir: {}
      - name: npm-cache
        emptyDir: {}

