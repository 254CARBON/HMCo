# Default values for monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose the service via gateway-api HTTPRoute
# Requires Gateway API resources and suitable controller installed within the cluster
# (see: https://gateway-api.sigs.k8s.io/guides/)
httpRoute:
  # HTTPRoute enabled.
  enabled: false
  # HTTPRoute annotations.
  annotations: {}
  # Which Gateways this Route is attached to.
  parentRefs:
  - name: gateway
    sectionName: http
    # namespace: default
  # Hostnames matching HTTP header.
  hostnames:
  - chart-example.local
  # List of rules and filters applied.
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /headers
  #   filters:
  #   - type: RequestHeaderModifier
  #     requestHeaderModifier:
  #       set:
  #       - name: My-Overwrite-Header
  #         value: this-is-the-only-value
  #       remove:
  #       - User-Agent
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /echo
  #     headers:
  #     - name: version
  #       value: v2

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

global:
  sso:
    enabled: false
    issuerUrl: ""
    authorizationUrl: ""
    tokenUrl: ""
    userInfoUrl: ""
    logoutUrl: ""
    scopes:
      - openid
      - profile
      - email
    claimMappings:
      email: email
      name: name
      groups: groups
      username: email
    groups:
      admin: platform-admins
      editor: data-engineers
      viewer: data-analysts

grafana:
  hostname: grafana.254carbon.com
  sso:
    enabled: false
    providerName: "OIDC"
    clientId: ""
    clientSecret:
      existingSecret: ""
      key: client-secret
    redirectUri: ""
    allowSignUp: true
    autoLogin: true
    usePkce: true
    scopes: []
    roleAttributePath: ""

kubecost:
  enabled: true
  global:
    prometheus:
      enabled: false
      fqdn: http://prometheus.monitoring.svc:9090
      insecureSkipVerify: false
    grafana:
      enabled: false
    notifications:
      alertmanager:
        enabled: true
        fqdn: http://alertmanager.monitoring.svc:9093
      alertConfigs: {}
  persistentVolume:
    enabled: true
    storageClass: local-storage-standard
    size: 32Gi
  service:
    type: ClusterIP
    port: 9090
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - cost-analyzer.local
    tls: []
  kubecostFrontend:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

kubecostBudgetThresholds: []

blackboxExporter:
  enabled: true
  replicaCount: 1
  image:
    repository: prom/blackbox-exporter
    tag: v0.24.0
    pullPolicy: IfNotPresent
  service:
    port: 9115
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 256Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  config:
    modules:
      http_2xx:
        prober: http
        timeout: 5s
        http:
          method: GET
          no_follow_redirects: false
          preferred_ip_protocol: ip4
      tcp_connect:
        prober: tcp
        timeout: 5s
  probes:
    interval: 30s
    scrapeTimeout: 10s
    defaultFor: 2m
    targets:
      - name: grafana
        url: https://grafana.254carbon.com/
        module: http_2xx
        labels:
          service: grafana
          severity: critical
          slo: platform-availability
      - name: datahub
        url: https://datahub.254carbon.com/health
        module: http_2xx
        labels:
          service: datahub
          severity: critical
          slo: platform-availability
      - name: superset
        url: https://superset.254carbon.com/health
        module: http_2xx
        labels:
          service: superset
          severity: warning
          slo: platform-availability
      - name: trino
        url: https://trino.254carbon.com/ui/
        module: http_2xx
        labels:
          service: trino
          severity: warning
          slo: query-gateway-availability
      - name: portal
        url: https://254carbon.com/
        module: http_2xx
        labels:
          service: portal
          severity: critical
          slo: portal-availability
