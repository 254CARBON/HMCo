# Prometheus Alerts for Commodity Data Platform
# Monitors data quality, pipeline failures, and market anomalies

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: commodity-prometheus-alerts
  namespace: monitoring
  labels:
    app: kube-prometheus-stack
    component: prometheus
data:
  commodity-alerts.yaml: |
    groups:
    - name: commodity_data_quality
      interval: 60s
      rules:
      
      # Data Freshness Alerts
      - alert: CommodityDataStale
        expr: |
          (time() - max(energy_prices_last_ingestion_timestamp)) > 86400
        for: 1h
        labels:
          severity: warning
          component: data-ingestion
        annotations:
          summary: "Commodity data is stale"
          description: "Energy prices haven't been updated in over 24 hours. Last update: {{`{{ $value | humanizeDuration }}`}}"
          runbook_url: "https://docs.254carbon.com/runbooks/stale-data"
      
      - alert: EconomicIndicatorsStale
        expr: |
          (time() - max(economic_indicators_last_ingestion_timestamp)) > 172800
        for: 2h
        labels:
          severity: warning
          component: data-ingestion
        annotations:
          summary: "Economic indicators data is stale"
          description: "Economic indicators haven't been updated in over 48 hours"
      
      # Data Quality Alerts
      - alert: HighNullValueRate
        expr: |
          (commodity_data_null_value_rate > 5)
        for: 30m
        labels:
          severity: warning
          component: data-quality
        annotations:
          summary: "High null value rate in commodity data"
          description: "{{`{{ $labels.table }}`}} has {{`{{ $value }}`}}% null values, exceeding 5% threshold"
      
      - alert: InvalidPriceValues
        expr: |
          (commodity_data_invalid_price_count > 10)
        for: 15m
        labels:
          severity: critical
          component: data-quality
        annotations:
          summary: "Invalid price values detected"
          description: "Found {{`{{ $value }}`}} invalid price records (negative or extreme values)"
      
      - alert: DuplicateRecords
        expr: |
          (commodity_data_duplicate_count > 100)
        for: 30m
        labels:
          severity: warning
          component: data-quality
        annotations:
          summary: "High duplicate record count"
          description: "{{`{{ $value }}`}} duplicate records found in commodity data"
      
      # Pipeline Health Alerts
      - alert: IngestionPipelineFailed
        expr: |
          (increase(dolphinscheduler_task_fail_total{task_type="commodity_ingestion"}[1h]) > 3)
        for: 10m
        labels:
          severity: critical
          component: data-pipeline
        annotations:
          summary: "Commodity ingestion pipeline failing"
          description: "{{`{{ $value }}`}} ingestion task failures in the last hour"
          runbook_url: "https://docs.254carbon.com/runbooks/pipeline-failure"
      
      - alert: LowDataIngestionRate
        expr: |
          (rate(commodity_records_ingested_total[5m]) < 10)
        for: 30m
        labels:
          severity: warning
          component: data-pipeline
        annotations:
          summary: "Low data ingestion rate"
          description: "Data ingestion rate is {{`{{ $value }}`}} records/sec (expected > 10)"
      
      # Market Anomaly Alerts
      - alert: ExtremePriceMovement
        expr: |
          (abs(commodity_price_change_pct) > 20)
        labels:
          severity: warning
          component: market-monitoring
        annotations:
          summary: "Extreme price movement detected"
          description: "{{`{{ $labels.commodity }}`}} price changed by {{`{{ $value }}`}}% in one day"
      
      - alert: HighVolatility
        expr: |
          (commodity_price_volatility_30d > 0.5)
        for: 1h
        labels:
          severity: info
          component: market-monitoring
        annotations:
          summary: "High market volatility"
          description: "{{`{{ $labels.commodity }}`}} volatility at {{`{{ $value }}`}} (30-day rolling)"
      
      # SeaTunnel Connector Health
      - alert: SeaTunnelConnectorDown
        expr: |
          (up{job="seatunnel"} == 0)
        for: 5m
        labels:
          severity: critical
          component: data-connectors
        annotations:
          summary: "SeaTunnel connector is down"
          description: "SeaTunnel service is not responding"
      
      - alert: SeaTunnelHighErrorRate
        expr: |
          (rate(seatunnel_connector_errors_total[5m]) > 0.1)
        for: 10m
        labels:
          severity: warning
          component: data-connectors
        annotations:
          summary: "High error rate in SeaTunnel connectors"
          description: "Error rate: {{`{{ $value | humanizePercentage }}`}}"
      
      # Storage Alerts for Commodity Data
      - alert: CommodityDataStorageFull
        expr: |
          (iceberg_table_size_bytes{namespace="commodity_data"} / 1024 / 1024 / 1024) > 500
        for: 1h
        labels:
          severity: warning
          component: storage
        annotations:
          summary: "Commodity data storage growing large"
          description: "{{`{{ $labels.table }}`}} is {{`{{ $value }}`}}GB, consider archiving old data"
      
      # API Rate Limiting Alerts
      - alert: APIRateLimitApproaching
        expr: |
          (api_requests_total{source=~"FRED|EIA|NOAA"} / api_rate_limit) > 0.8
        for: 15m
        labels:
          severity: warning
          component: external-apis
        annotations:
          summary: "Approaching API rate limit"
          description: "{{`{{ $labels.source }}`}} API usage at {{`{{ $value | humanizePercentage }}`}} of limit"

---
# PrometheusRule CRD for auto-discovery
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: commodity-data-alerts
  namespace: monitoring
  labels:
    app: kube-prometheus-stack
    release: kube-prometheus-stack
spec:
  groups:
  - name: commodity_data_quality
    interval: 60s
    rules:
    - alert: CommodityDataStale
      expr: (time() - timestamp(up{job="seatunnel"})) > 86400
      for: 1h
      labels:
        severity: warning
        component: data-ingestion
      annotations:
        summary: "Commodity data is stale"
        description: "Data ingestion hasn't run successfully in over 24 hours"
    
    - alert: DolphinSchedulerWorkflowFailed
      expr: increase(dolphinscheduler_task_fail_total[1h]) > 5
      for: 10m
      labels:
        severity: critical
        component: workflow-orchestration
      annotations:
        summary: "Multiple DolphinScheduler workflow failures"
        description: "{{`{{ $value }}`}} workflow task failures in the last hour"
    
    - alert: TrinoQueryPerformanceDegraded
      expr: histogram_quantile(0.95, rate(trino_query_duration_seconds_bucket[5m])) > 30
      for: 15m
      labels:
        severity: warning
        component: query-engine
      annotations:
        summary: "Slow Trino query performance"
        description: "95th percentile query latency is {{`{{ $value }}`}}s (expected < 30s)"

