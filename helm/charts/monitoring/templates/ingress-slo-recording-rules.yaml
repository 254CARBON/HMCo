---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: ingress-slo-recording-rules
  namespace: monitoring
  labels:
    role: slo
    component: ingress
spec:
  groups:
    - name: ingress.http.sli
      interval: 30s
      rules:
        # Request rates by path and backend service
        - record: ingress:http_requests:rate5m
          expr: |
            sum(rate(nginx_ingress_controller_requests[5m]))
            by (namespace, ingress, service, host, path)

        - record: ingress:http_errors:rate5m
          expr: |
            sum(rate(nginx_ingress_controller_requests{status=~"5.."}[5m]))
            by (namespace, ingress, service, host, path)

        - record: ingress:http_error_ratio:5m
          expr: |
            ingress:http_errors:rate5m / ingress:http_requests:rate5m

        # Latency percentiles by path and backend service
        - record: ingress:http_latency_p95:5m
          expr: |
            histogram_quantile(
              0.95,
              sum by (namespace, ingress, service, host, path, le) (
                rate(nginx_ingress_controller_request_duration_seconds_bucket[5m])
              )
            )

        - record: ingress:http_latency_p99:5m
          expr: |
            histogram_quantile(
              0.99,
              sum by (namespace, ingress, service, host, path, le) (
                rate(nginx_ingress_controller_request_duration_seconds_bucket[5m])
              )
            )

        # Aggregated by backend service (namespace+service) for simpler SLOs
        - record: ingress:http_latency_p95_service:5m
          expr: |
            histogram_quantile(
              0.95,
              sum by (namespace, service, le) (
                rate(nginx_ingress_controller_request_duration_seconds_bucket[5m])
              )
            )

        - record: ingress:http_error_ratio_service:5m
          expr: |
            sum(rate(nginx_ingress_controller_requests{status=~"5.."}[5m])) by (namespace, service)
            /
            sum(rate(nginx_ingress_controller_requests[5m])) by (namespace, service)

