# RBAC Configuration for 254Carbon Data Platform
# Implements least-privilege access control

---
# Role for developers - read-only access to resources
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer-read-only
  namespace: data-platform
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
# No exec access for read-only - removed empty verbs rule

---
# Role for operators - full access except secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operator-full-access
  namespace: data-platform
rules:
- apiGroups: ["", "apps", "batch", "networking.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]  # Can view but not modify secrets

---
# Role for CI/CD - deployment and service management
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cicd-deployer
  namespace: data-platform
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services", "configmaps"]
  verbs: ["get", "list", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "create", "delete"]

---
# Role for monitoring - metrics and logs access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: monitoring-reader
  namespace: data-platform
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
# ServiceAccount for DataHub ingestion jobs
apiVersion: v1
kind: ServiceAccount
metadata:
  name: datahub-ingestion
  namespace: data-platform
  labels:
    app: datahub

---
# Role for DataHub ingestion
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: datahub-ingestion
  namespace: data-platform
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list"]

---
# RoleBinding for DataHub ingestion
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: datahub-ingestion
  namespace: data-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: datahub-ingestion
subjects:
- kind: ServiceAccount
  name: datahub-ingestion
  namespace: data-platform

---
# ClusterRole for reading cluster-wide resources (for monitoring)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-resource-reader
rules:
- apiGroups: [""]
  resources: ["nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]

# Pod Security Policy (PSP) removed - deprecated in Kubernetes 1.21+
# Use Pod Security Standards (PSS) instead:
# kubectl label namespace data-platform pod-security.kubernetes.io/enforce=restricted
# kubectl label namespace data-platform pod-security.kubernetes.io/audit=restricted
# kubectl label namespace data-platform pod-security.kubernetes.io/warn=restricted

---
# Example RoleBinding for developers (bind to actual users/groups)
# Uncomment and modify as needed
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: developers-binding
#   namespace: data-platform
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: developer-read-only
# subjects:
# - kind: Group
#   name: developers
#   apiGroup: rbac.authorization.k8s.io

---
# Example RoleBinding for operators
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: operators-binding
#   namespace: data-platform
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: operator-full-access
# subjects:
# - kind: Group
#   name: operators
#   apiGroup: rbac.authorization.k8s.io

