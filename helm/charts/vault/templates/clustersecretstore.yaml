{{- if .Values.clusterSecretStore.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ .Values.clusterSecretStore.name | quote }}
  labels:
    app.kubernetes.io/name: vault-clustersecretstore
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: secrets-store
spec:
  provider:
    vault:
      server: {{ default (printf "http://%s-hashicorpVault.%s.svc.cluster.local:8200" .Release.Name .Release.Namespace) .Values.clusterSecretStore.server | quote }}
      path: {{ .Values.clusterSecretStore.path | quote }}
      version: {{ .Values.clusterSecretStore.version | quote }}
{{- with .Values.clusterSecretStore.caBundleSecret }}
      caProvider:
        type: Secret
        name: {{ . | quote }}
        namespace: {{ $.Release.Namespace | quote }}
        key: ca.crt
{{- end }}
{{- if and .Values.global.tls.enabled (not .Values.clusterSecretStore.caBundleSecret) }}
      # TLS is enabled but no CA bundle secret was provided. Ensure the default
      # cluster trust chain can validate Vault's certificate.
{{- end }}
      auth:
{{- if eq (lower .Values.clusterSecretStore.auth.type) "kubernetes" }}
        kubernetes:
          mountPath: {{ .Values.clusterSecretStore.auth.mountPath | quote }}
          role: {{ .Values.clusterSecretStore.auth.role | quote }}
          serviceAccountRef:
            name: {{ .Values.clusterSecretStore.auth.serviceAccountRef.name | quote }}
            namespace: {{ .Values.clusterSecretStore.auth.serviceAccountRef.namespace | quote }}
{{- else if eq (lower .Values.clusterSecretStore.auth.type) "token" }}
        token:
          secretRef:
            name: {{ .Values.clusterSecretStore.auth.secretRef.name | quote }}
            key: {{ .Values.clusterSecretStore.auth.secretRef.key | quote }}
            namespace: {{ .Values.clusterSecretStore.auth.secretRef.namespace | quote }}
{{- else }}
        # Unsupported auth type provided. See values.yaml for supported options.
{{- end }}
{{- end }}
