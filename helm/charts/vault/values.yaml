# Values for the Vault + External Secrets umbrella chart.
# This chart wraps the official HashiCorp Vault Helm chart and the
# External Secrets Operator chart, and adds opinionated defaults for
# the 254Carbon platform.

# Global defaults shared across subcharts.
global:
  # Default Kubernetes storage class used for Vault Raft persistence.
  storageClass: local-path
  # Optional imagePullSecrets propagated to subcharts.
  imagePullSecrets: []
  # Set to true and provide TLS secrets to enable TLS for the Vault listener.
  tls:
    enabled: false
    # Secret containing tls.crt / tls.key for Vault listener when TLS is enabled.
    serverTLSSecret: ""
    # Optional secret containing a CA bundle (ca.crt) for Vault clients.
    caBundleSecret: ""
  # Override to expose Vault through an external address (used by injector/CSI).
  externalVaultAddr: ""

# Configuration passed to the official HashiCorp Vault chart via the alias
# `hashicorpVault`.
hashicorpVault:
  global:
    # Disable TLS by default. When enabling TLS, set this to false and
    # provide `global.tls.*` secrets.
    tlsDisable: true
    imagePullSecrets: []
  injector:
    enabled: true
    replicas: 2
    logLevel: info
    leaderElector:
      enabled: true
    metrics:
      enabled: true
  csi:
    enabled: false
  server:
    ha:
      enabled: true
      replicas: 3
      raft:
        enabled: true
        setNodeId: true
      # Opinionated Raft configuration with TLS disabled by default.
      config: |
        ui = true

        listener "tcp" {
          address         = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_disable     = 1
        }

        storage "raft" {
          path = "/vault/data"
        }

        service_registration "kubernetes" {}
    standalone:
      enabled: false
    dataStorage:
      enabled: true
      size: 10Gi
      storageClass: local-path
    auditStorage:
      enabled: false
    service:
      type: ClusterIP
    ingress:
      enabled: false
    extraEnvironmentVars:
      VAULT_LOG_LEVEL: info
    # Rolling updates let Raft handle leader re-election.
    updateStrategyType: RollingUpdate
    disruptionBudget:
      enabled: true
      maxUnavailable: null
    authDelegator:
      enabled: true
    # Fallback config for components that still read `server.config`.
    config: |
      ui = true

      listener "tcp" {
        address         = "[::]:8200"
        cluster_address = "[::]:8201"
        tls_disable     = 1
      }

      storage "raft" {
        path = "/vault/data"
      }

      service_registration "kubernetes" {}
  ui:
    enabled: true
    serviceType: ClusterIP
    externalPort: 8200
  serviceAccount:
    create: true
    name: ""
    createSecret: false
    annotations: {}

# External Secrets Operator configuration (alias: `externalSecrets`).
externalSecrets:
  installCRDs: true
  fullnameOverride: external-secrets-operator
  replicaCount: 2
  leaderElector:
    name: external-secrets-operator
    namespace: vault
  serviceAccount:
    create: true
    name: external-secrets-operator
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  webhook:
    create: true
  certController:
    create: true

# ClusterSecretStore definition used by platform workloads.
clusterSecretStore:
  enabled: true
  name: platform-vault
  namespace: vault
  path: secret
  version: v2
  # When blank the in-cluster service DNS name is used.
  server: ""
  # Optional secret that holds the CA bundle (key: ca.crt) for Vault.
  caBundleSecret: ""
  auth:
    type: kubernetes
    mountPath: kubernetes
    role: external-secrets
    serviceAccountRef:
      name: external-secrets-operator
      namespace: vault

# Default annotations/templates for workloads that rely on Vault Agent
# injection. Charts can merge/override these values as needed.
vaultAgentDefaults:
  enabled: false
  annotations: {}
  templates: {}
