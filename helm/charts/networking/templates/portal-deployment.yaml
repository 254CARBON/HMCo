---
# Portal Namespace (data-platform already exists, adding portal reference here)
# Deployment for the 254Carbon Portal
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal
  namespace: data-platform
  labels:
    app: portal
    component: sso-landing
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: portal
  template:
    metadata:
      labels:
        app: portal
        component: sso-landing
      annotations:
        prometheus.io/scrape: "false"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - portal
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: portal
        image: 254carbon-portal:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: NEXT_PUBLIC_PORTAL_URL
          value: "https://254carbon.com"
        - name: NEXT_PUBLIC_API_URL
          value: "https://254carbon.com/api"
        - name: NEXT_PUBLIC_SERVICES_API_BASE
          value: "/api/services"
        - name: NEXT_PUBLIC_CLOUDFLARE_ACCESS_DOMAIN
          value: "qagi.cloudflareaccess.com"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}

---
# Portal Service
apiVersion: v1
kind: Service
metadata:
  name: portal
  namespace: data-platform
  labels:
    app: portal
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: portal

---
# PodDisruptionBudget for Portal
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: portal-pdb
  namespace: data-platform
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: portal
