apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
  labels:
    {{- include "progressive-delivery.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
spec:
  replicas: {{ .Values.argoRollouts.replicaCount }}
  selector:
    matchLabels:
      {{- include "progressive-delivery.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        {{- include "progressive-delivery.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: {{ include "progressive-delivery.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: argo-rollouts
        image: "{{ .Values.argoRollouts.image.repository }}:{{ .Values.argoRollouts.image.tag }}"
        imagePullPolicy: {{ .Values.argoRollouts.image.pullPolicy }}
        args:
        - --namespaced
        - --namespace
        - {{ .Values.targetNamespace }}
        ports:
        - name: metrics
          containerPort: 8090
          protocol: TCP
        - name: healthz
          containerPort: 8080
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.argoRollouts.resources | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
