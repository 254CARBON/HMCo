{{- $vault := .Values.vault.externalSecrets -}}
{{- if and $vault.enabled $vault.secrets }}
{{- $global := .Values.global -}}
{{- range $secret := $vault.secrets }}
{{- $namespace := coalesce $secret.namespace $vault.defaults.namespace $global.namespace }}
{{- $refresh := coalesce $secret.refreshInterval $vault.refreshInterval $global.vault.refreshInterval "1h" }}
{{- $secretStoreRef := default (dict) (index $secret "secretStoreRef") }}
{{- $storeName := coalesce (index $secretStoreRef "name") $vault.secretStoreRef.name $global.vault.secretStoreRef.name }}
{{- $storeKind := coalesce (index $secretStoreRef "kind") $vault.secretStoreRef.kind $global.vault.secretStoreRef.kind "ClusterSecretStore" }}
{{- $targetName := coalesce $secret.targetName $secret.name }}
{{- $creationPolicy := coalesce $secret.creationPolicy $vault.defaults.creationPolicy $global.vault.creationPolicy "Owner" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $targetName | quote }}
  namespace: {{ $namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ $targetName | quote }}
    app.kubernetes.io/managed-by: "external-secrets"
spec:
  refreshInterval: {{ $refresh | quote }}
  secretStoreRef:
    name: {{ $storeName | quote }}
    kind: {{ $storeKind | quote }}
  target:
    name: {{ $targetName | quote }}
    creationPolicy: {{ $creationPolicy | quote }}
{{- if $secret.data }}
  data:
{{- range $item := $secret.data }}
    - secretKey: {{ $item.secretKey | quote }}
      remoteRef:
        key: {{ $item.remoteRef.key | quote }}
{{- if $item.remoteRef.property }}
        property: {{ $item.remoteRef.property | quote }}
{{- end }}
{{- if $item.remoteRef.version }}
        version: {{ $item.remoteRef.version | quote }}
{{- end }}
{{- if $item.remoteRef.decodingStrategy }}
        decodingStrategy: {{ $item.remoteRef.decodingStrategy | quote }}
{{- end }}
{{- if $item.remoteRef.metadataPolicy }}
        metadataPolicy: {{ $item.remoteRef.metadataPolicy | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- if $secret.dataFrom }}
  dataFrom:
{{- range $source := $secret.dataFrom }}
    - extract:
        key: {{ $source.extract.key | quote }}
{{- if $source.extract.metadataPolicy }}
        metadataPolicy: {{ $source.extract.metadataPolicy | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
