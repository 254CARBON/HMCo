# NetworkPolicy for Spark Operator
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: spark-operator-network
  namespace: data-platform
  labels:
    app: spark
    component: networking
spec:
  podSelector:
    matchLabels:
      app: spark-operator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow Kubernetes API access
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443
  # Allow access from DolphinScheduler
  - from:
    - podSelector:
        matchLabels:
          app: dolphinscheduler
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow Kubernetes API
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443
  # Allow pod creation/management in data-platform
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 443
  # Allow DNS
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: UDP
      port: 53
---
# NetworkPolicy for Spark Application Pods (Drivers/Executors)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: spark-app-network
  namespace: data-platform
  labels:
    app: spark
    component: networking
spec:
  podSelector:
    matchLabels:
      spark-role: driver
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from Spark History Server
  - from:
    - podSelector:
        matchLabels:
          app: spark-history-server
    ports:
    - protocol: TCP
      port: 7077
  # Allow executor to driver communication
  - from:
    - podSelector:
        matchLabels:
          spark-role: executor
    ports:
    - protocol: TCP
      port: 7077
    - protocol: TCP
      port: 8081
  egress:
  # Allow Iceberg REST Catalog
  - to:
    - podSelector:
        matchLabels:
          app: iceberg-rest-catalog
    ports:
    - protocol: TCP
      port: 8181
  # Allow MinIO access
  - to:
    - podSelector:
        matchLabels:
          app: minio
    ports:
    - protocol: TCP
      port: 9000
  # Allow Kafka access
  - to:
    - podSelector:
        matchLabels:
          app: kafka
    ports:
    - protocol: TCP
      port: 9092
  # Allow PostgreSQL access
  - to:
    - podSelector:
        matchLabels:
          app: postgres-shared
    ports:
    - protocol: TCP
      port: 5432
  # Allow MLFlow access
  - to:
    - podSelector:
        matchLabels:
          app: mlflow
    ports:
    - protocol: TCP
      port: 5000
  # Allow DNS
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: UDP
      port: 53
  # Allow external internet (for package downloads)
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
---
# NetworkPolicy for Spark Executors
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: spark-executor-network
  namespace: data-platform
  labels:
    app: spark
    component: networking
spec:
  podSelector:
    matchLabels:
      spark-role: executor
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow driver to executor communication
  - from:
    - podSelector:
        matchLabels:
          spark-role: driver
    ports:
    - protocol: TCP
      port: 8081
  # Allow executor to executor communication
  - from:
    - podSelector:
        matchLabels:
          spark-role: executor
    ports:
    - protocol: TCP
      port: 8081
  egress:
  # Allow driver communication
  - to:
    - podSelector:
        matchLabels:
          spark-role: driver
    ports:
    - protocol: TCP
      port: 7077
    - protocol: TCP
      port: 8081
  # Allow Iceberg REST Catalog
  - to:
    - podSelector:
        matchLabels:
          app: iceberg-rest-catalog
    ports:
    - protocol: TCP
      port: 8181
  # Allow MinIO access
  - to:
    - podSelector:
        matchLabels:
          app: minio
    ports:
    - protocol: TCP
      port: 9000
  # Allow Kafka access
  - to:
    - podSelector:
        matchLabels:
          app: kafka
    ports:
    - protocol: TCP
      port: 9092
  # Allow PostgreSQL access
  - to:
    - podSelector:
        matchLabels:
          app: postgres-shared
    ports:
    - protocol: TCP
      port: 5432
  # Allow MLFlow access
  - to:
    - podSelector:
        matchLabels:
          app: mlflow
    ports:
    - protocol: TCP
      port: 5000
  # Allow DNS
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: UDP
      port: 53
  # Allow external internet
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
---
# NetworkPolicy for Spark History Server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: spark-history-network
  namespace: data-platform
  labels:
    app: spark
    component: networking
spec:
  podSelector:
    matchLabels:
      app: spark-history-server
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow NGINX Ingress
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 18080
  # Allow browser/user access through ingress
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 18080
  egress:
  # Allow MinIO access for logs
  - to:
    - podSelector:
        matchLabels:
          app: minio
    ports:
    - protocol: TCP
      port: 9000
  # Allow DNS
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: UDP
      port: 53
---
# Service Discovery for Spark Driver
apiVersion: v1
kind: Service
metadata:
  name: spark-driver-discovery
  namespace: data-platform
  labels:
    app: spark
    component: discovery
spec:
  selector:
    spark-role: driver
  ports:
  - name: driver
    port: 7077
    targetPort: 7077
  - name: driver-ui
    port: 4040
    targetPort: 4040
  clusterIP: None
---
# Service Discovery for Spark Executor
apiVersion: v1
kind: Service
metadata:
  name: spark-executor-discovery
  namespace: data-platform
  labels:
    app: spark
    component: discovery
spec:
  selector:
    spark-role: executor
  ports:
  - name: executor
    port: 8081
    targetPort: 8081
  clusterIP: None
