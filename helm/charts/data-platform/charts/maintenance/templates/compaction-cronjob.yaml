apiVersion: batch/v1
kind: CronJob
metadata:
  name: iceberg-compaction
  namespace: data-platform
  labels:
    app: iceberg-maintenance
    component: compaction
spec:
  schedule: {{ .Values.schedules.compaction | quote }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: iceberg-maintenance
            component: compaction
        spec:
          restartPolicy: OnFailure
          containers:
          - name: compaction
            image: "{{ .Values.spark.image.repository }}:{{ .Values.spark.image.tag }}"
            command:
            - /bin/sh
            - -c
            - |
              spark-sql \
                --conf spark.sql.catalog.iceberg=org.apache.iceberg.spark.SparkCatalog \
                --conf spark.sql.catalog.iceberg.type=rest \
                --conf spark.sql.catalog.iceberg.uri={{ .Values.iceberg.catalogUri }} \
                --conf spark.sql.catalog.iceberg.warehouse={{ .Values.iceberg.warehouse }} \
                --conf spark.sql.catalog.iceberg.io-impl=org.apache.iceberg.aws.s3.S3FileIO \
                --conf spark.sql.catalog.iceberg.s3.endpoint={{ .Values.s3.endpoint }} \
                --conf spark.sql.catalog.iceberg.s3.path-style-access={{ .Values.s3.pathStyleAccess }} \
                -e "
                -- Compact small files (target: 512MB files)
                CALL iceberg.system.rewrite_data_files(
                  table => 'hub_curated.iso_rt_lmp',
                  options => map('target-file-size-bytes', '536870912', 'min-file-size-bytes', '10485760')
                );
                
                CALL iceberg.system.rewrite_data_files(
                  table => 'hub_curated.noaa_hourly',
                  options => map('target-file-size-bytes', '536870912', 'min-file-size-bytes', '10485760')
                );
                "
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: secretkey
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
