# DataHub system upgrade job to initialize database tables and search indices
apiVersion: batch/v1
kind: Job
metadata:
  name: datahub-upgrade
  namespace: data-platform
  labels:
    app: datahub-upgrade
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app: datahub-upgrade
    spec:
      restartPolicy: Never
      containers:
      - name: datahub-upgrade
        image: acryldata/datahub-upgrade:head
        imagePullPolicy: IfNotPresent
        args:
          - -u
          - SystemUpdate
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        env:
          # Database
          - name: EBEAN_DATASOURCE_HOST
            value: postgres-shared-service:5432
          - name: EBEAN_DATASOURCE_URL
            value: jdbc:postgresql://postgres-shared-service:5432/datahub
          - name: EBEAN_DATASOURCE_USERNAME
            value: datahub
          - name: EBEAN_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-shared-secret
                key: password
          - name: EBEAN_DATASOURCE_DRIVER
            value: org.postgresql.Driver
          # Kafka & Schema Registry
          - name: KAFKA_BOOTSTRAP_SERVER
            value: kafka-service:9093
          - name: KAFKA_BOOTSTRAP_SERVERS
            value: kafka-service:9093
          - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
            value: SSL
          - name: SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
            value: ""
          - name: SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_TYPE
            value: PKCS12
          - name: SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_TYPE
            value: PKCS12
          - name: SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION
            value: /etc/kafka/secrets/user.p12
          - name: SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION
            value: /etc/kafka/secrets/user.p12
          - name: SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka-datahub-tls
                key: user.password
          - name: SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka-datahub-tls
                key: user.password
          - name: SPRING_KAFKA_PROPERTIES_SSL_KEY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka-datahub-tls
                key: user.password
          - name: KAFKA_SCHEMAREGISTRY_URL
            value: http://schema-registry-service:8081
          - name: KAFKA_SCHEMA_REGISTRY_URL
            value: http://schema-registry-service:8081
          - name: SCHEMA_REGISTRY_URL
            value: http://schema-registry-service:8081
          # Elasticsearch
          - name: ELASTICSEARCH_HOST
            value: elasticsearch-service
          - name: ELASTICSEARCH_PORT
            value: "9200"
          # Neo4j
          - name: NEO4J_HOST
            value: graphdb-service:7474
          - name: NEO4J_URI
            value: bolt://graphdb-service:7687
          - name: NEO4J_USERNAME
            value: neo4j
          - name: NEO4J_PASSWORD
            value: datahub_password
          - name: ENTITY_REGISTRY_CONFIG_PATH
            value: /datahub/datahub-gms/resources/entity-registry.yml
          # GMS endpoint
          - name: DATAHUB_GMS_HOST
            value: datahub-gms
          - name: DATAHUB_GMS_PORT
            value: "8080"
          # MinIO / S3 storage
          - name: AWS_REGION
            value: us-east-1
          - name: S3_ENDPOINT
            value: http://minio-service:9000
          - name: AWS_ENDPOINT_URL
            value: http://minio-service:9000
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: access-key
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: secret-key
        volumeMounts:
        - name: kafka-client-cert
          mountPath: /etc/kafka/secrets
          readOnly: true
      volumes:
      - name: kafka-client-cert
        secret:
          secretName: kafka-datahub-tls
          defaultMode: 0400
