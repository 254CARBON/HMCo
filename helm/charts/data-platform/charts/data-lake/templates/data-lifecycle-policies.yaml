---
# Data Lifecycle Policies for Iceberg Tables
# Automates data retention, archival, and cleanup for 10x scale

apiVersion: v1
kind: ConfigMap
metadata:
  name: iceberg-lifecycle-policies
  namespace: data-platform
  labels:
    app: iceberg
data:
  lifecycle-policy.sql: |
    -- Data retention policies for commodity data
    
    -- Hot data: Last 90 days (frequent access)
    -- Warm data: 91-365 days (occasional access)
    -- Cold data: 365+ days (archival, compressed)
    
    -- Energy prices: Keep 2 years, archive after
    ALTER TABLE commodity_data.energy_prices
    SET TBLPROPERTIES (
      'write.metadata.delete-after-commit.enabled' = 'true',
      'write.metadata.previous-versions-max' = '10',
      'write.data.path' = 's3://minio-service:9000/iceberg/energy_prices/data',
      'write.metadata.path' = 's3://minio-service:9000/iceberg/energy_prices/metadata',
      'write.parquet.compression-codec' = 'zstd',
      'write.target-file-size-bytes' = '536870912'  -- 512MB files
    );
    
    -- Partition by date for efficient querying
    ALTER TABLE commodity_data.energy_prices
    ADD IF NOT EXISTS PARTITION FIELD years(price_date);
    
    -- Market data: Keep 5 years
    ALTER TABLE commodity_data.market_data
    SET TBLPROPERTIES (
      'write.metadata.previous-versions-max' = '20',
      'write.target-file-size-bytes' = '268435456'  -- 256MB
    );
    
    -- Metadata: Retain indefinitely
    ALTER TABLE metadata.datahub_metadata
    SET TBLPROPERTIES (
      'write.metadata.previous-versions-max' = '100',
      'write.object-storage.enabled' = 'true'
    );

---
# Iceberg Compaction CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: iceberg-compaction
  namespace: data-platform
  labels:
    app: iceberg
    component: maintenance
spec:
  schedule: "0 3 * * 0"  # Weekly on Sunday 3 AM
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
          labels:
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: OnFailure
          containers:
          - name: compaction
            image: trinodb/trino:438
            command:
            - /bin/sh
            - -c
            - |
              echo "Starting Iceberg table compaction..."
              
              # Compact energy_prices table
              trino --execute "
              ALTER TABLE iceberg_catalog.commodity_data.energy_prices
              EXECUTE optimize(file_size_threshold => '10MB');
              "
              
              # Compact market_data table
              trino --execute "
              ALTER TABLE iceberg_catalog.commodity_data.market_data
              EXECUTE optimize(file_size_threshold => '10MB');
              "
              
              # Remove old snapshots
              trino --execute "
              ALTER TABLE iceberg_catalog.commodity_data.energy_prices
              EXECUTE expire_snapshots(older_than => TIMESTAMP '2025-01-01 00:00:00', retain_last => 10);
              "
              
              echo "Compaction complete!"
            resources:
              requests:
                cpu: 2000m
                memory: 4Gi
              limits:
                cpu: 4000m
                memory: 8Gi

---
# Data Archival Policy CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: data-archival
  namespace: data-platform
  labels:
    app: iceberg
    component: archival
spec:
  schedule: "0 2 1 * *"  # Monthly on 1st at 2 AM
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
          labels:
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: OnFailure
          containers:
          - name: archival
            image: trinodb/trino:438
            command:
            - /bin/sh
            - -c
            - |
              echo "Starting data archival..."
              
              # Archive data older than 2 years to cold storage
              trino --execute "
              CREATE TABLE IF NOT EXISTS iceberg_catalog.commodity_data.energy_prices_archive
              AS SELECT * FROM iceberg_catalog.commodity_data.energy_prices
              WHERE price_date < CURRENT_DATE - INTERVAL '2' YEAR;
              "
              
              # Delete archived data from hot table
              trino --execute "
              DELETE FROM iceberg_catalog.commodity_data.energy_prices
              WHERE price_date < CURRENT_DATE - INTERVAL '2' YEAR;
              "
              
              echo "Archival complete!"
            resources:
              requests:
                cpu: 4000m
                memory: 8Gi
              limits:
                cpu: 8000m
                memory: 16Gi


