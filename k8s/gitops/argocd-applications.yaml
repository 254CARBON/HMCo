---
# ArgoCD Application: Data Platform
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: data-platform
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/data-platform
    helm:
      valueFiles:
        - values.yaml
        - values/prod.yaml  # Environment-specific values
      parameters:
      - name: "data-lake.enabled"
        value: "true"
      - name: "datahub.enabled"
        value: "false"
      - name: "spark-operator.enabled"
        value: "true"
      - name: "dolphinscheduler.enabled"
        value: "true"
      - name: "trino.enabled"
        value: "true"
      - name: "doris.enabled"
        value: "true"
      - name: "superset.enabled"
        value: "true"
  destination:
    server: https://kubernetes.default.svc
    namespace: data-platform
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true

---
# ArgoCD Application: Cloudflare Tunnel
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cloudflare-tunnel
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/cloudflare-tunnel
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: cloudflare-tunnel
  ignoreDifferences:
    - group: monitoring.coreos.com
      kind: ServiceMonitor
      managedFieldsManagers:
        - prometheus-operator
      jsonPointers:
        - /metadata/labels
        - /metadata/annotations
        - /spec/endpoints
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true

---
# ArgoCD Application: ML Platform
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ml-platform
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/ml-platform
    helm:
      valueFiles:
        - values.yaml
        - values/prod.yaml
      parameters:
      - name: "mlflow.enabled"
        value: "true"
      - name: "kubeflow.enabled"
        value: "true"
  destination:
    server: https://kubernetes.default.svc
    namespace: data-platform
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2

---
# ArgoCD Application: Monitoring Stack
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/monitoring
    helm:
      valueFiles:
        - values.yaml
        - values/prod.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2

---
# ArgoCD AppProject: Production
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: production
  namespace: argocd
spec:
  description: Production environment applications
  sourceRepos:
    - 'https://github.com/254CARBON/HMCo.git'
    - 'https://charts.helm.sh/stable'
    - 'https://ray-project.github.io/kuberay-helm/'
    - 'https://kyverno.github.io/kyverno/'
  destinations:
    - namespace: '*'
      server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: '*'
      kind: '*'
  orphanedResources:
    warn: true
    ignore:
      - group: ""
        kind: ConfigMap
        name: kube-root-ca.crt
      - group: ""
        kind: ConfigMap
        name: istio-ca-root-cert
      - group: ""
        kind: ServiceAccount
        name: default
      - group: ""
        kind: Secret
        name: cloudflare-tunnel-token
      - group: ""
        kind: Secret
        name: cloudflare-tunnel-token

---
# ArgoCD Application: Ray Serve (RayService)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ray-serve
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-4"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: k8s/ml-platform/ray-serve/service
    kustomize: {}
  destination:
    server: https://kubernetes.default.svc
    namespace: data-platform
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2

---
# ArgoCD Application: Ray Image Prepull DaemonSet
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ray-image-prepull
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: k8s/ml-platform/ray-serve/prepull
    kustomize: {}
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2

---
# ArgoCD Application: Kyverno Baseline Policies
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kyverno-baseline-policies
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-9"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: k8s/security/kyverno
    kustomize: {}
  destination:
    server: https://kubernetes.default.svc
    namespace: kyverno
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2

---
# ArgoCD Application: KubeRay CRDs
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kuberay-crds
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: k8s/ml-platform/ray-serve/kuberay-crds
    kustomize: {}
  destination:
    server: https://kubernetes.default.svc
    namespace: ray-system
  syncPolicy:
    automated: null
---
# ArgoCD Application: KubeRay Operator via Helm (CRDs included)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kuberay-operator-helm
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://ray-project.github.io/kuberay-helm/
    chart: kuberay-operator
    targetRevision: 1.0.0
    helm:
      values: |
        image:
          tag: v1.0.0
        rbac:
          create: true
  destination:
    server: https://kubernetes.default.svc
    namespace: ray-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2

---
# ArgoCD Application: Kyverno via Helm
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kyverno
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://kyverno.github.io/kyverno/
    chart: kyverno
    targetRevision: 3.1.0
    helm:
      values: |
        crds:
          install: true
          annotations:
            argocd.argoproj.io/sync-options: Replace=true
        replicaCount: 1
        cleanupJobs:
          admissionReports:
            enabled: true
            image:
              registry: docker.io
              repository: bitnami/kubectl
              tag: "1.28.0"
              pullPolicy: IfNotPresent
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
          clusterAdmissionReports:
            enabled: true
            image:
              registry: docker.io
              repository: bitnami/kubectl
              tag: "1.28.0"
              pullPolicy: IfNotPresent
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
  destination:
    server: https://kubernetes.default.svc
    namespace: kyverno
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
---
# ArgoCD Application: API Gateway
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: api-gateway
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/api-gateway
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: data-platform
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
---
# ArgoCD Application: Service Mesh
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: service-mesh
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/service-mesh
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# ArgoCD Application: Storage
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: storage
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/storage
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# ArgoCD Application: Vault
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-9"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/vault
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: vault
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# ArgoCD Application: Networking
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: networking
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/networking
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# ArgoCD Application: Platform Policies
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: platform-policies
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-11"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/platform-policies
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true

---
# ArgoCD Application: Portal Services
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: portal-services
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-4"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: production
  source:
    repoURL: https://github.com/254CARBON/HMCo.git
    targetRevision: main
    path: helm/charts/portal-services
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: data-platform
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
