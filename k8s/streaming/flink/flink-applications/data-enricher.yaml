# Flink Application: Data Enricher
# Enriches raw price data with reference data and metadata
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flink-data-enricher-config
  namespace: data-platform
  labels:
    app: flink
    flink-app: data-enricher
data:
  data-enricher.sql: |
    -- Flink SQL for Data Enrichment
    
    -- Source: Raw commodity prices from API
    CREATE TABLE commodity_prices_raw (
      commodity_code STRING,
      price DECIMAL(18, 4),
      currency STRING,
      unit STRING,
      price_timestamp TIMESTAMP(3),
      WATERMARK FOR price_timestamp AS price_timestamp - INTERVAL '5' SECOND
    ) WITH (
      'connector' = 'kafka',
      'topic' = 'commodity-prices-raw',
      'properties.bootstrap.servers' = 'kafka-service:9092',
      'properties.group.id' = 'flink-data-enricher',
      'format' = 'json',
      'json.fail-on-missing-field' = 'false',
      'scan.startup.mode' = 'latest-offset'
    );
    
    -- Reference data: Commodity metadata from Iceberg
    CREATE TABLE commodity_metadata (
      commodity_code STRING,
      commodity_name STRING,
      category STRING,
      subcategory STRING,
      exchange STRING,
      standard_unit STRING,
      PRIMARY KEY (commodity_code) NOT ENFORCED
    ) WITH (
      'connector' = 'iceberg',
      'catalog-name' = 'rest',
      'catalog-type' = 'rest',
      'uri' = 'http://iceberg-rest-catalog:8181',
      'warehouse' = 's3://iceberg-warehouse/',
      'catalog-impl' = 'org.apache.iceberg.rest.RESTCatalog',
      's3.endpoint' = 'http://minio-service:9000',
      's3.path-style-access' = 'true'
    );
    
    -- Sink: Enriched prices to Kafka
    CREATE TABLE commodity_prices_enriched (
      price_id BIGINT,
      commodity_code STRING,
      commodity_name STRING,
      category STRING,
      subcategory STRING,
      price DECIMAL(18, 4),
      currency STRING,
      unit STRING,
      exchange STRING,
      price_timestamp TIMESTAMP(3),
      ingestion_timestamp TIMESTAMP(3)
    ) WITH (
      'connector' = 'kafka',
      'topic' = 'commodity-prices-enriched',
      'properties.bootstrap.servers' = 'kafka-service:9092',
      'format' = 'avro-confluent',
      'avro-confluent.url' = 'http://schema-registry-service:8081'
    );
    
    -- Enrich raw prices with metadata
    INSERT INTO commodity_prices_enriched
    SELECT
      CAST(UNIX_TIMESTAMP() AS BIGINT) AS price_id,
      p.commodity_code,
      COALESCE(m.commodity_name, 'Unknown') AS commodity_name,
      COALESCE(m.category, 'Unknown') AS category,
      COALESCE(m.subcategory, 'Unknown') AS subcategory,
      p.price,
      p.currency,
      COALESCE(p.unit, m.standard_unit) AS unit,
      COALESCE(m.exchange, 'Unknown') AS exchange,
      p.price_timestamp,
      CURRENT_TIMESTAMP AS ingestion_timestamp
    FROM commodity_prices_raw p
    LEFT JOIN commodity_metadata m
      ON p.commodity_code = m.commodity_code;
---
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: data-enricher
  namespace: data-platform
  labels:
    app: flink
    flink-app: data-enricher
spec:
  image: flink:1.18
  flinkVersion: v1_18
  serviceAccount: flink
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "4"
    state.backend: rocksdb
    state.checkpoints.dir: s3://flink-checkpoints/data-enricher
    execution.checkpointing.interval: "60000"
    execution.checkpointing.mode: EXACTLY_ONCE
    s3.endpoint: http://minio-service:9000
    s3.access-key: minioadmin
    s3.secret-key: minioadmin123
    s3.path.style.access: "true"
  jobManager:
    resource:
      memory: "2048m"
      cpu: 1
    replicas: 1
  taskManager:
    resource:
      memory: "3072m"
      cpu: 2
    replicas: 2
  job:
    jarURI: local:///opt/flink/opt/flink-sql-client-1.18.0.jar
    args: ["-f", "/opt/flink/usrlib/data-enricher.sql"]
    parallelism: 2
    upgradeMode: savepoint
    state: running


