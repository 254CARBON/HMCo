# Flink Kubernetes Operator
# Manages Flink deployments as Kubernetes CRDs
---
apiVersion: v1
kind: Namespace
metadata:
  name: flink-operator
  labels:
    app: flink-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flink-operator
  namespace: flink-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flink-operator
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/finalizers", "replicasets"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["deployments", "ingresses"]
  verbs: ["*"]
- apiGroups: ["flink.apache.org"]
  resources: ["flinkdeployments", "flinkdeployments/status", "flinksessionjobs", "flinksessionjobs/status"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["*"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flink-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flink-operator
subjects:
- kind: ServiceAccount
  name: flink-operator
  namespace: flink-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flink-operator-config
  namespace: flink-operator
  labels:
    app: flink-operator
data:
  flink-conf.yaml: |
    kubernetes.operator.reconcile.interval: 60s
    kubernetes.operator.observer.progress-check.interval: 10s
    kubernetes.operator.reconcile.parallelism: 5
    kubernetes.operator.flink.client.timeout: 10m
    kubernetes.operator.deployment.rollback.enabled: true
    kubernetes.operator.deployment.readiness.timeout: 5m
    kubernetes.operator.user.artifacts.http.header: "User-Agent: Apache Flink Kubernetes Operator"
    kubernetes.operator.metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
    kubernetes.operator.metrics.reporter.prom.port: 9999
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flink-kubernetes-operator
  namespace: flink-operator
  labels:
    app: flink-operator
    component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flink-operator
      component: operator
  template:
    metadata:
      labels:
        app: flink-operator
        component: operator
    spec:
      serviceAccountName: flink-operator
      containers:
      - name: flink-kubernetes-operator
        image: apache/flink-kubernetes-operator:1.7.0
        imagePullPolicy: IfNotPresent
        command: ["/docker-entrypoint.sh", "operator"]
        ports:
        - containerPort: 9999
          name: metrics
        - containerPort: 8085
          name: health
        env:
        - name: OPERATOR_NAMESPACE
          value: ""
        - name: OPERATOR_NAME
          value: flink-kubernetes-operator
        - name: FLINK_CONF_DIR
          value: /opt/flink/conf
        - name: FLINK_PLUGINS_DIR
          value: /opt/flink/plugins
        - name: LOG_CONFIG
          value: "-Dlog4j.configurationFile=/opt/flink/conf/log4j-operator.properties"
        - name: JVM_ARGS
          value: "-Xms512m -Xmx512m"
        volumeMounts:
        - name: flink-operator-config
          mountPath: /opt/flink/conf
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: flink-operator-config
        configMap:
          name: flink-operator-config
---
apiVersion: v1
kind: Service
metadata:
  name: flink-operator-metrics
  namespace: flink-operator
  labels:
    app: flink-operator
spec:
  selector:
    app: flink-operator
    component: operator
  ports:
  - name: metrics
    port: 9999
    targetPort: 9999
  - name: health
    port: 8085
    targetPort: 8085


