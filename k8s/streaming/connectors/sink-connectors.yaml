# Sink Connectors for Kafka Connect
# Sends data from Kafka to various destinations
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: iceberg-sink-connector-config
  namespace: data-platform
  labels:
    app: kafka-connect
    connector-type: sink
data:
  iceberg-sink-connector.json: |
    {
      "name": "iceberg-commodity-prices-sink",
      "config": {
        "connector.class": "io.tabular.iceberg.connect.IcebergSinkConnector",
        "tasks.max": "2",
        "topics": "commodity-prices-enriched",
        "iceberg.tables": "commodity_data.energy_prices",
        "iceberg.catalog.type": "rest",
        "iceberg.catalog.uri": "http://iceberg-rest-catalog:8181",
        "iceberg.catalog.warehouse": "s3://iceberg-warehouse/",
        "iceberg.catalog.s3.endpoint": "http://minio-service:9000",
        "iceberg.catalog.s3.access-key-id": "minioadmin",
        "iceberg.catalog.s3.secret-access-key": "minioadmin123",
        "iceberg.catalog.s3.path-style-access": "true",
        "key.converter": "io.confluent.connect.avro.AvroConverter",
        "key.converter.schema.registry.url": "http://schema-registry-service:8081",
        "value.converter": "io.confluent.connect.avro.AvroConverter",
        "value.converter.schema.registry.url": "http://schema-registry-service:8081"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-sink-connector-config
  namespace: data-platform
  labels:
    app: kafka-connect
    connector-type: sink
data:
  elasticsearch-sink-connector.json: |
    {
      "name": "elasticsearch-commodity-alerts-sink",
      "config": {
        "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
        "tasks.max": "1",
        "topics": "market-alerts",
        "connection.url": "http://elasticsearch-service:9200",
        "type.name": "_doc",
        "key.ignore": "false",
        "schema.ignore": "true",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter.schemas.enable": "false",
        "batch.size": "2000",
        "max.buffered.records": "20000",
        "flush.timeout.ms": "10000"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-sink-connector-config
  namespace: data-platform
  labels:
    app: kafka-connect
    connector-type: sink
data:
  s3-archive-sink-connector.json: |
    {
      "name": "s3-raw-data-archive-sink",
      "config": {
        "connector.class": "io.confluent.connect.s3.S3SinkConnector",
        "tasks.max": "2",
        "topics.regex": ".*-raw",
        "s3.bucket.name": "kafka-archive",
        "s3.region": "us-east-1",
        "s3.part.size": "5242880",
        "store.url": "http://minio-service:9000",
        "aws.access.key.id": "minioadmin",
        "aws.secret.access.key": "minioadmin123",
        "format.class": "io.confluent.connect.s3.format.json.JsonFormat",
        "partitioner.class": "io.confluent.connect.storage.partitioner.TimeBasedPartitioner",
        "path.format": "YYYY/MM/dd/HH",
        "partition.duration.ms": "3600000",
        "timestamp.extractor": "Record",
        "flush.size": "10000",
        "rotate.interval.ms": "60000",
        "timezone": "UTC",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter.schemas.enable": "false"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jdbc-sink-connector-config
  namespace: data-platform
  labels:
    app: kafka-connect
    connector-type: sink
data:
  postgres-metrics-sink-connector.json: |
    {
      "name": "postgres-metrics-sink",
      "config": {
        "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
        "tasks.max": "1",
        "topics": "data-quality-metrics",
        "connection.url": "jdbc:postgresql://postgres-shared-service:5432/datahub",
        "connection.user": "postgres",
        "connection.password": "${env:POSTGRES_PASSWORD}",
        "table.name.format": "streaming_metrics",
        "insert.mode": "upsert",
        "pk.mode": "record_value",
        "pk.fields": "metric_id",
        "auto.create": "true",
        "auto.evolve": "true",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "value.converter": "io.confluent.connect.avro.AvroConverter",
        "value.converter.schema.registry.url": "http://schema-registry-service:8081"
      }
    }


