---
# DataHub Iceberg Ingestion Recipe ConfigMap
# This recipe configures DataHub to discover and catalog Iceberg tables
apiVersion: v1
kind: ConfigMap
metadata:
  name: datahub-iceberg-recipe
  namespace: data-platform
  labels:
    app: datahub
    component: ingestion
data:
  iceberg-recipe.yml: |
    # DataHub Iceberg Ingestion Recipe
    # Discovers and catalogs Iceberg tables via REST Catalog
    
    source:
      type: "iceberg"
      config:
        # Environment and platform
        env: "prod"
        platform_instance: "hmco_iceberg"
        
        # Catalog configuration for Iceberg REST
        catalog:
          rest_catalog:
            type: "rest"
            uri: "http://iceberg-rest-catalog:8181"
            # S3/MinIO configuration
            s3.access-key-id: "minioadmin"
            s3.secret-access-key: "minioadmin123"
            s3.region: "us-east-1"
            s3.endpoint: "http://minio-service:9000"
            s3.path-style-access: "true"
        
        # Namespace filtering (optional)
        namespace_pattern:
          allow: [".*"]  # Discover all namespaces
          ignoreCase: true
        
        # Table filtering (optional)
        table_pattern:
          allow: [".*"]  # Discover all tables
          ignoreCase: true
        
        # Ownership extraction from table properties
        user_ownership_property: "owner"  # Property key for user owner
        group_ownership_property: "team"  # Property key for group owner
        
        # Data profiling (optional)
        profiling:
          enabled: false  # Set to true to enable profiling
          include_field_null_count: true
          include_field_min_value: true
          include_field_max_value: true
          operation_config:
            lower_freq_profile_enabled: false
            profile_day_of_week: 0  # Sunday
            profile_date_of_month: 1  # First of month
    
    # Sink configuration - where to send the metadata
    sink:
      type: "datahub-rest"
      config:
        server: "http://datahub-gms:8080"
        token: ""  # Optional: set if DataHub authentication is enabled
        extra_headers:
          X-DataHub-Actor: "urn:li:corpuser:datahub_ingestion"
    
    # Optional transformers to enrich metadata
    transformers:
      - type: "add_dataset_tags"
        config:
          tags: ["iceberg", "data-lake"]
---
# CronJob to run Iceberg ingestion periodically
apiVersion: batch/v1
kind: CronJob
metadata:
  name: datahub-iceberg-ingestion
  namespace: data-platform
  labels:
    app: datahub
    component: ingestion
spec:
  # Run ingestion every 2 hours
  schedule: "0 */2 * * *"
  
  # Keep job history for debugging
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  
  jobTemplate:
    metadata:
      labels:
        app: datahub
        job: iceberg-ingestion
    spec:
      backoffLimit: 3
      completions: 1
      parallelism: 1
      ttlSecondsAfterFinished: 600
      
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccountName: default
          
          containers:
          - name: datahub-ingestion
            image: acryldata/datahub-ingestion:latest
            imagePullPolicy: IfNotPresent
            
            env:
            - name: DATAHUB_GMS_URL
              value: "http://datahub-gms:8080"
            - name: DATAHUB_GMS_TOKEN
              value: ""  # Optional: set if authentication is enabled
            - name: LOG_LEVEL
              value: "INFO"
            
            volumeMounts:
            - name: ingestion-recipe
              mountPath: /recipes
              readOnly: true
            - name: ingestion-state
              mountPath: /state
            
            command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Starting Iceberg ingestion..."
              datahub ingest -c /recipes/iceberg-recipe.yml
              echo "Ingestion completed successfully!"
            
            resources:
              limits:
                memory: "1Gi"
                cpu: "500m"
              requests:
                memory: "512Mi"
                cpu: "250m"
          
          volumes:
          - name: ingestion-recipe
            configMap:
              name: datahub-iceberg-recipe
              items:
              - key: iceberg-recipe.yml
                path: iceberg-recipe.yml
          - name: ingestion-state
            emptyDir: {}
---
# Job for one-time ingestion (for testing)
apiVersion: batch/v1
kind: Job
metadata:
  name: datahub-iceberg-ingestion-test
  namespace: data-platform
  labels:
    app: datahub
    component: ingestion
    job-type: test
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: default
      
      containers:
      - name: datahub-ingestion-test
        image: acryldata/datahub-ingestion:latest
        imagePullPolicy: IfNotPresent
        
        env:
        - name: DATAHUB_GMS_URL
          value: "http://datahub-gms:8080"
        - name: LOG_LEVEL
          value: "DEBUG"
        
        volumeMounts:
        - name: ingestion-recipe
          mountPath: /recipes
          readOnly: true
        
        command:
        - /bin/sh
        - -c
        - |
          echo "DataHub Iceberg Ingestion Test"
          echo "==============================="
          echo ""
          echo "Configuration:"
          echo "  DataHub GMS: $DATAHUB_GMS_URL"
          echo "  Recipe: /recipes/iceberg-recipe.yml"
          echo ""
          echo "Starting ingestion..."
          datahub ingest -c /recipes/iceberg-recipe.yml --dry-run
          echo ""
          echo "Test completed!"
      
      volumes:
      - name: ingestion-recipe
        configMap:
          name: datahub-iceberg-recipe
          items:
          - key: iceberg-recipe.yml
            path: iceberg-recipe.yml
---
# ServiceAccount for ingestion jobs (optional)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: datahub-ingestion
  namespace: data-platform
  labels:
    app: datahub
    component: ingestion
