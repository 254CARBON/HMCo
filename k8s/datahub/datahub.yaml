# DataHub deployment with all core services
# This includes GMS, Frontend, MAE, and MCE consumers

---
# DataHub GMS (Graph Metadata Service)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-gms
  namespace: data-platform
  labels:
    app: datahub-gms
    component: metadata-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-gms
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: datahub-gms
        component: metadata-service
    spec:
      initContainers:
      - name: datahub-upgrade
        image: acryldata/datahub-upgrade:head
        imagePullPolicy: IfNotPresent
        args:
          - -u
          - SystemUpdate
        env:
        - name: EBEAN_DATASOURCE_HOST
          value: postgres-shared-service:5432
        - name: EBEAN_DATASOURCE_URL
          value: jdbc:postgresql://postgres-shared-service:5432/datahub
        - name: EBEAN_DATASOURCE_USERNAME
          value: datahub
        - name: EBEAN_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-shared-secret
              key: password
        - name: EBEAN_DATASOURCE_DRIVER
          value: org.postgresql.Driver
        - name: KAFKA_BOOTSTRAP_SERVER
          value: kafka-service:9092
        - name: KAFKA_SCHEMAREGISTRY_URL
          value: http://schema-registry-service:8081
        - name: KAFKA_SCHEMA_REGISTRY_URL
          value: http://schema-registry-service:8081
        - name: SCHEMA_REGISTRY_URL
          value: http://schema-registry-service:8081
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-service
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: NEO4J_HOST
          value: graphdb-service:7474
        - name: NEO4J_URI
          value: bolt://graphdb-service:7687
        - name: NEO4J_USERNAME
          value: neo4j
        - name: NEO4J_PASSWORD
          value: datahub_password
        - name: ENTITY_REGISTRY_CONFIG_PATH
          value: /datahub/datahub-gms/resources/entity-registry.yml
        - name: DATAHUB_GMS_HOST
          value: datahub-gms
        - name: DATAHUB_GMS_PORT
          value: "8080"
        - name: AWS_REGION
          value: us-east-1
        - name: S3_ENDPOINT
          value: http://minio-service:9000
        - name: AWS_ENDPOINT_URL
          value: http://minio-service:9000
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
      imagePullSecrets: []
      containers:
      - name: datahub-gms
        image: acryldata/datahub-gms:head
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: gms
        env:
        - name: DATAHUB_GMS_HOST
          value: "0.0.0.0"
        - name: DATAHUB_GMS_PORT
          value: "8080"
        - name: DATAHUB_SERVER_TYPE
          value: "quickstart"
        - name: DATAHUB_SECRET
          valueFrom:
            secretKeyRef:
              name: datahub-secret
              key: DATAHUB_SECRET
        - name: EBEAN_DATASOURCE_HOST
          value: "postgres-shared-service:5432"
        - name: EBEAN_DATASOURCE_PORT
          value: "5432"
        - name: EBEAN_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-shared-service:5432/datahub"
        - name: EBEAN_DATASOURCE_USERNAME
          value: "datahub"
        - name: EBEAN_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-shared-secret
              key: password
        - name: EBEAN_DATASOURCE_DRIVER
          value: "org.postgresql.Driver"
        - name: NEO4J_HOST
          value: "graphdb-service:7474"
        - name: NEO4J_URI
          value: "bolt://graphdb-service:7687"
        - name: NEO4J_USERNAME
          value: "neo4j"
        - name: NEO4J_PASSWORD
          value: "datahub_password"
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch-service"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ENTITY_REGISTRY_CONFIG_PATH
          value: "/datahub/datahub-gms/resources/entity-registry.yml"
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ENDPOINT_URL
          value: "http://minio-service:9000"
        - name: S3_ENDPOINT
          value: "http://minio-service:9000"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        - name: KAFKA_BOOTSTRAP_SERVER
          value: "kafka-service:9092"
        - name: KAFKA_SCHEMAREGISTRY_URL
          value: "http://schema-registry-service:8081"
        - name: KAFKA_SCHEMA_REGISTRY_URL
          value: "http://schema-registry-service:8081"
        - name: SCHEMA_REGISTRY_URL
          value: "http://schema-registry-service:8081"
        - name: SYSTEM_TELEMETRY_ENABLED
          value: "false"
        - name: DATAHUB_TELEMETRY_ENABLED
          value: "false"
        - name: OTEL_SDK_DISABLED
          value: "true"
        - name: SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET
          value: "earliest"
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
---
# DataHub GMS Service
apiVersion: v1
kind: Service
metadata:
  name: datahub-gms
  namespace: data-platform
  labels:
    app: datahub-gms
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: gms
  selector:
    app: datahub-gms
  type: ClusterIP

---
# DataHub Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-frontend
  namespace: data-platform
  labels:
    app: datahub-frontend
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-frontend
  template:
    metadata:
      labels:
        app: datahub-frontend
        component: frontend
    spec:
      imagePullSecrets: []
      containers:
      - name: datahub-frontend
        image: acryldata/datahub-frontend-react:head
        ports:
        - containerPort: 9002
          name: frontend
        env:
        - name: DATAHUB_SECRET
          valueFrom:
            secretKeyRef:
              name: datahub-secret
              key: DATAHUB_SECRET
        - name: DATAHUB_APP_VERSION
          value: "head"
        - name: DATAHUB_GMS_HOST
          value: "datahub-gms"
        - name: DATAHUB_GMS_PORT
          value: "8080"
        - name: REACT_APP_DATAHUB_GMS_HOST
          value: "datahub-gms"
        - name: REACT_APP_DATAHUB_GMS_PORT
          value: "8080"
        - name: REACT_APP_SERVER_HOST
          value: "0.0.0.0"
        - name: REACT_APP_SERVER_PORT
          value: "9002"
        - name: JAVA_OPTS
          value: "-Dcom.sun.jndi.ldap.connect.pool=false"
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /
            port: 9002
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 9002
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
---
# DataHub Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: datahub-frontend
  namespace: data-platform
  labels:
    app: datahub-frontend
spec:
  ports:
  - port: 9002
    targetPort: 9002
    name: frontend
  selector:
    app: datahub-frontend
  type: ClusterIP

---
# DataHub MAE Consumer (Metadata Audit Events)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-mae-consumer
  namespace: data-platform
  labels:
    app: datahub-mae-consumer
    component: mae-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-mae-consumer
  template:
    metadata:
      labels:
        app: datahub-mae-consumer
        component: mae-consumer
    spec:
      imagePullSecrets: []
      containers:
      - name: datahub-mae-consumer
        image: acryldata/datahub-mae-consumer:head
        env:
        - name: DATAHUB_GMS_HOST
          value: "datahub-gms"
        - name: DATAHUB_GMS_PORT
          value: "8080"
        - name: KAFKA_BOOTSTRAP_SERVER
          value: "kafka-service:9092"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch-service"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_INDEX
          value: "datahub_usage_event"
        - name: NEO4J_HOST
          value: "neo4j-0.graphdb-headless:7474"
        - name: NEO4J_URI
          value: "bolt://neo4j-0.graphdb-headless:7687"
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ENDPOINT_URL
          value: "http://minio-service:9000"
        - name: S3_ENDPOINT
          value: "http://minio-service:9000"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
---
# DataHub MAE Consumer Service
apiVersion: v1
kind: Service
metadata:
  name: datahub-mae-consumer
  namespace: data-platform
  labels:
    app: datahub-mae-consumer
spec:
  ports:
  - port: 9090
    targetPort: 9090
    name: mae-consumer
  selector:
    app: datahub-mae-consumer
  type: ClusterIP

---
# DataHub MCE Consumer (Metadata Change Events)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datahub-mce-consumer
  namespace: data-platform
  labels:
    app: datahub-mce-consumer
    component: mce-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub-mce-consumer
  template:
    metadata:
      labels:
        app: datahub-mce-consumer
        component: mce-consumer
    spec:
      imagePullSecrets: []
      containers:
      - name: datahub-mce-consumer
        image: acryldata/datahub-mce-consumer:head
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9090
        env:
        - name: KAFKA_BOOTSTRAP_SERVER
          value: "kafka-service:9092"
        - name: DATAHUB_GMS_HOST
          value: "datahub-gms"
        - name: DATAHUB_GMS_PORT
          value: "8080"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: KAFKA_SCHEMAREGISTRY_URL
          value: "http://schema-registry-service:8081"
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch-service"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: EBEAN_DATASOURCE_HOST
          value: "postgres-shared-service:5432"
        - name: EBEAN_DATASOURCE_PORT
          value: "5432"
        - name: EBEAN_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-shared-service:5432/datahub"
        - name: EBEAN_DATASOURCE_USERNAME
          value: "datahub"
        - name: EBEAN_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-shared-secret
              key: password
        - name: EBEAN_DATASOURCE_DRIVER
          value: "org.postgresql.Driver"
        - name: DATAHUB_PRODUCER_ENABLED
          value: "true"
        - name: DATAHUB_PRODUCER_MCLEVEL
          value: "FINE"
        - name: DATAHUB_JVM_OPTS
          value: "-Xms512m -Xmx1024m"
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ENDPOINT_URL
          value: "http://minio-service:9000"
        - name: S3_ENDPOINT
          value: "http://minio-service:9000"
        - name: ENTITY_REGISTRY_CONFIG_PATH
          value: "/datahub/datahub-mce-consumer/resources/entity-registry.yml"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 9090
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 9090
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
---
# DataHub MCE Consumer Service
apiVersion: v1
kind: Service
metadata:
  name: datahub-mce-consumer
  namespace: data-platform
  labels:
    app: datahub-mce-consumer
spec:
  ports:
  - port: 9090
    targetPort: 9090
    name: mce-consumer
  selector:
    app: datahub-mce-consumer
  type: ClusterIP
