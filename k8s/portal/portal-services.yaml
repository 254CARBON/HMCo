---
apiVersion: v1
kind: ConfigMap
metadata:
  name: portal-services-registry
  namespace: data-platform
data:
  services.json: |
      [
      {"id":"datahub","name":"DataHub","url":"https://datahub.254carbon.com/","category":"Catalog","description":"Data catalog and lineage platform.","icon":"üìö","healthPath":"/","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-datahub","namespace":"data-platform","clientIdKey":"client_id","clientSecretKey":"client_secret"},
        "internalUrl":"http://datahub-frontend.data-platform.svc.cluster.local:9002/"},
      {"id":"superset","name":"Apache Superset","url":"https://superset.254carbon.com/","category":"BI","description":"Dashboards and data exploration.","icon":"üìä","healthPath":"/health","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-superset","namespace":"data-platform","clientIdKey":"client_id","clientSecretKey":"client_secret"},
        "internalUrl":"http://superset.data-platform.svc.cluster.local:8088/health"},
      {"id":"grafana","name":"Grafana","url":"https://grafana.254carbon.com/","category":"Monitoring","description":"Observability dashboards and alerts.","icon":"üìà","healthPath":"/api/health","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-grafana","namespace":"monitoring","clientIdKey":"client_id","clientSecretKey":"client_secret"},
        "internalUrl":"http://grafana.monitoring.svc.cluster.local:3000/api/health"},
      {"id":"doris","name":"Apache Doris","url":"https://doris.254carbon.com/","category":"OLAP","description":"MPP analytics database frontend.","icon":"üßÆ","healthPath":"/","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-doris","namespace":"data-platform"},
        "internalUrl":"http://doris-fe-service.data-platform.svc.cluster.local:8030/"},
      {"id":"trino","name":"Trino","url":"https://trino.254carbon.com/","category":"SQL","description":"SQL query engine coordinator UI.","icon":"üß†","healthPath":"/ui/","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-trino","namespace":"data-platform"},
        "internalUrl":"http://trino-coordinator.data-platform.svc.cluster.local:8080/ui/"},
      {"id":"vault","name":"Vault","url":"https://vault.254carbon.com/","category":"Security","description":"Secrets management console.","icon":"üîê","healthPath":"/v1/sys/health","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-vault","namespace":"vault-prod"},
        "internalUrl":"http://vault.vault-prod.svc.cluster.local:8200/v1/sys/health"},
      {"id":"lakefs","name":"lakeFS","url":"https://lakefs.254carbon.com/","category":"Data Lake","description":"Git-like data lake management.","icon":"üåä","healthPath":"/health","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-lakefs","namespace":"data-platform"},
        "internalUrl":"http://lakefs.data-platform.svc.cluster.local:8000/health"},
      {"id":"dolphinscheduler","name":"DolphinScheduler","url":"https://dolphin.254carbon.com/","category":"Orchestration","description":"Workflow and job scheduler.","icon":"üê¨","healthPath":"/actuator/health","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-dolphinscheduler","namespace":"data-platform"},
        "internalUrl":"http://dolphinscheduler-api.data-platform.svc.cluster.local:12345/actuator/health"},
      {"id":"minio","name":"MinIO Console","url":"https://minio.254carbon.com/","category":"Storage","description":"Object storage management console.","icon":"üóÑÔ∏è","healthPath":"/","useCloudflareAccess":true,
        "cfAccessSecretRef":{"name":"cf-access-minio","namespace":"data-platform"},
        "internalUrl":"http://minio-console.data-platform.svc.cluster.local:9001/"},
      {"id":"kiali","name":"Kiali","url":"https://kiali.254carbon.com/","category":"Monitoring","description":"Service mesh visualization and management.","icon":"üï∏Ô∏è","healthPath":"/kiali/healthz","useCloudflareAccess":false,
        "internalUrl":"http://kiali.istio-system.svc.cluster.local:20001/"},
      {"id":"jaeger","name":"Jaeger","url":"https://jaeger.254carbon.com/","category":"Monitoring","description":"Distributed tracing for microservices.","icon":"üîç","healthPath":"/","useCloudflareAccess":false,
        "internalUrl":"http://jaeger-query.istio-system.svc.cluster.local:16686/"},
      {"id":"kong","name":"Kong Admin","url":"https://kong.254carbon.com/","category":"API Gateway","description":"API gateway administration.","icon":"ü¶ç","healthPath":"/status","useCloudflareAccess":true,
        "internalUrl":"http://kong-admin.kong.svc.cluster.local:8001/"}
      ]

---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-access-service-token
  namespace: data-platform
type: Opaque
stringData:
  client_id: "REPLACE_WITH_CF_ACCESS_CLIENT_ID"
  client_secret: "REPLACE_WITH_CF_ACCESS_CLIENT_SECRET"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal-services
  namespace: data-platform
  labels:
    app: portal-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portal-services
  template:
    metadata:
      labels:
        app: portal-services
    spec:
      serviceAccountName: portal-services
      containers:
      - name: api
        image: 254carbon/portal-services:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        env:
        - name: CONFIG_PATH
          value: /config/services.json
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CF_ACCESS_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: cloudflare-access-service-token
              key: client_id
        - name: CF_ACCESS_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: cloudflare-access-service-token
              key: client_secret
        - name: TIMEOUT_MS
          value: "6000"
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: portal-services-registry

---
apiVersion: v1
kind: Service
metadata:
  name: portal-services
  namespace: data-platform
  labels:
    app: portal-services
spec:
  type: ClusterIP
  selector:
    app: portal-services
  ports:
  - name: http
    port: 8080
    targetPort: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: portal-services
  namespace: data-platform

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: portal-services-secrets-read
  namespace: data-platform
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
    - cloudflare-access-service-token
    - cf-access-datahub
    - cf-access-superset
    - cf-access-doris
    - cf-access-trino
    - cf-access-lakefs
    - cf-access-dolphinscheduler
    - cf-access-minio
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: portal-services-secrets-read
  namespace: data-platform
subjects:
- kind: ServiceAccount
  name: portal-services
  namespace: data-platform
roleRef:
  kind: Role
  name: portal-services-secrets-read
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: portal-services-secrets-read
  namespace: monitoring
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
    - cf-access-grafana
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: portal-services-secrets-read
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: portal-services
  namespace: data-platform
roleRef:
  kind: Role
  name: portal-services-secrets-read
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: portal-services-secrets-read
  namespace: vault-prod
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
    - cf-access-vault
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: portal-services-secrets-read
  namespace: vault-prod
subjects:
- kind: ServiceAccount
  name: portal-services
  namespace: data-platform
roleRef:
  kind: Role
  name: portal-services-secrets-read
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: portal-services-ingress-read
  namespace: data-platform
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: portal-services-ingress-read
  namespace: data-platform
subjects:
- kind: ServiceAccount
  name: portal-services
  namespace: data-platform
roleRef:
  kind: Role
  name: portal-services-ingress-read
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: portal-services-ingress-read
  namespace: monitoring
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: portal-services-ingress-read
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: portal-services
  namespace: data-platform
roleRef:
  kind: Role
  name: portal-services-ingress-read
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: portal-services-ingress-read
  namespace: vault-prod
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: portal-services-ingress-read
  namespace: vault-prod
subjects:
- kind: ServiceAccount
  name: portal-services
  namespace: data-platform
roleRef:
  kind: Role
  name: portal-services-ingress-read
  apiGroup: rbac.authorization.k8s.io
