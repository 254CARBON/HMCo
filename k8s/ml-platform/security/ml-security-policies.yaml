---
# Enable STRICT mTLS for Ray cluster
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: ray-cluster-mtls
  namespace: data-platform
spec:
  selector:
    matchLabels:
      app: ray-cluster
  mtls:
    mode: STRICT
---
# Enable STRICT mTLS for Feast
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: feast-mtls
  namespace: data-platform
spec:
  selector:
    matchLabels:
      app: feast
  mtls:
    mode: STRICT
---
# ServiceAccount for Feast
apiVersion: v1
kind: ServiceAccount
metadata:
  name: feast-server
  namespace: data-platform
  labels:
    app: feast
---
# Role for Feast to access PostgreSQL and Redis
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: feast-server
  namespace: data-platform
spec:
  rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
    resourceNames: ["postgres-shared-secret", "redis-secret"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]
---
# RoleBinding for Feast
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: feast-server
  namespace: data-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: feast-server
subjects:
- kind: ServiceAccount
  name: feast-server
  namespace: data-platform
---
# ServiceAccount for Ray cluster
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ray-cluster
  namespace: data-platform
  labels:
    app: ray-cluster
---
# Role for Ray cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ray-cluster
  namespace: data-platform
spec:
  rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
    resourceNames: ["minio-credentials"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# RoleBinding for Ray cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ray-cluster
  namespace: data-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ray-cluster
subjects:
- kind: ServiceAccount
  name: ray-cluster
  namespace: data-platform
---
# NetworkPolicy for Ray cluster
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ray-cluster-netpol
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: ray-cluster
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ray-cluster
    - podSelector:
        matchLabels:
          app: feast
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 6379  # Redis protocol (Ray GCS)
    - protocol: TCP
      port: 8265  # Dashboard
    - protocol: TCP
      port: 10001 # Client
    - protocol: TCP
      port: 8000  # Serve
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: ray-cluster
    - podSelector:
        matchLabels:
          app: mlflow
    - podSelector:
        matchLabels:
          app: minio
    - podSelector:
        matchLabels:
          app: postgres-shared
    ports:
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 8265
    - protocol: TCP
      port: 10001
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 5000  # MLflow
    - protocol: TCP
      port: 9000  # MinIO
    - protocol: TCP
      port: 5432  # PostgreSQL
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
# NetworkPolicy for Feast
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: feast-netpol
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: feast
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ray-cluster
    - podSelector:
        matchLabels:
          app: portal
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 6566  # HTTP
    - protocol: TCP
      port: 6567  # gRPC
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    - podSelector:
        matchLabels:
          app: postgres-shared
    ports:
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 5432  # PostgreSQL
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
# AuthorizationPolicy for Ray dashboard (read-only access)
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ray-dashboard-policy
  namespace: data-platform
spec:
  selector:
    matchLabels:
      app: ray-cluster
      component: head
  rules:
  - to:
    - operation:
        methods: ["GET", "HEAD", "OPTIONS"]
        paths: ["/metrics", "/api/overview", "/api/cluster_status"]
  - from:
    - source:
        namespaces: ["monitoring"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics"]
---
# AuthorizationPolicy for Feast (allow from Ray and authorized clients)
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: feast-policy
  namespace: data-platform
spec:
  selector:
    matchLabels:
      app: feast
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/data-platform/sa/ray-cluster"]
  - from:
    - source:
        namespaces: ["monitoring"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics", "/health"]



