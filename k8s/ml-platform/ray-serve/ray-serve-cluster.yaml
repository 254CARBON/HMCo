apiVersion: ray.io/v1
kind: RayService
metadata:
  name: ray-serve-cluster
  namespace: data-platform
  labels:
    app: ray-serve
    component: ml-serving
spec:
  serviceUnhealthySecondThreshold: 900
  deploymentUnhealthySecondThreshold: 300
  
  # Ray Serve configuration
  serveConfigV2: |
    applications:
      - name: model-serving
        route_prefix: /serve
        import_path: ray_serve_app:deployment
        runtime_env:
          pip:
            - mlflow==2.10.0
            - scikit-learn==1.3.2
            - xgboost==2.0.3
            - boto3
            - feast==0.35.0
  
  rayClusterConfig:
    rayVersion: '2.9.0'
    
    # Head node
    headGroupSpec:
      rayStartParams:
        dashboard-host: '0.0.0.0'
        num-cpus: '0'
      template:
        metadata:
          labels:
            app: ray-serve
            component: head
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - name: ray-head
            image: rayproject/ray-ml:2.9.0
            ports:
            - containerPort: 6379
              name: gcs
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
            env:
            - name: MLFLOW_TRACKING_URI
              value: "http://mlflow.data-platform.svc.cluster.local:5000"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretkey
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "http://minio-service.data-platform.svc.cluster.local:9000"
            resources:
              requests:
                cpu: 2
                memory: 4Gi
              limits:
                cpu: 4
                memory: 8Gi
            volumeMounts:
            - name: ray-logs
              mountPath: /tmp/ray
          volumes:
          - name: ray-logs
            emptyDir: {}
    
    # Worker nodes
    workerGroupSpecs:
    - replicas: 3
      minReplicas: 2
      maxReplicas: 10
      groupName: serve-workers
      rayStartParams:
        num-cpus: '4'
      template:
        metadata:
          labels:
            app: ray-serve
            component: worker
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - name: ray-worker
            image: rayproject/ray-ml:2.9.0
            env:
            - name: MLFLOW_TRACKING_URI
              value: "http://mlflow.data-platform.svc.cluster.local:5000"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretkey
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "http://minio-service.data-platform.svc.cluster.local:9000"
            resources:
              requests:
                cpu: 2
                memory: 8Gi
              limits:
                cpu: 4
                memory: 16Gi
            volumeMounts:
            - name: ray-logs
              mountPath: /tmp/ray
          volumes:
          - name: ray-logs
            emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ray-serve-service
  namespace: data-platform
  labels:
    app: ray-serve
spec:
  type: ClusterIP
  selector:
    app: ray-serve
    component: head
  ports:
  - name: serve
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: dashboard
    port: 8265
    targetPort: 8265
    protocol: TCP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ray-serve
  namespace: data-platform
  labels:
    app: ray-serve
spec:
  selector:
    matchLabels:
      app: ray-serve
  endpoints:
  - port: dashboard
    path: /metrics
    interval: 30s


