apiVersion: v1
kind: Namespace
metadata:
  name: seldon-system
  labels:
    name: seldon-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: seldondeployments.machinelearning.seldon.io
spec:
  group: machinelearning.seldon.io
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              predictors:
                type: array
              name:
                type: string
              replicas:
                type: integer
  scope: Namespaced
  names:
    kind: SeldonDeployment
    plural: seldondeployments
    singular: seldondeployment
    shortNames:
    - sdep
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: seldon-manager
  namespace: seldon-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: seldon-manager-role
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["machinelearning.seldon.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices", "destinationrules"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: seldon-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: seldon-manager-role
subjects:
- kind: ServiceAccount
  name: seldon-manager
  namespace: seldon-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: seldon-config
  namespace: seldon-system
data:
  credentials: |
    {
      "mlflow": {
        "tracking_uri": "http://mlflow.data-platform.svc.cluster.local:5000"
      },
      "feast": {
        "feature_server": "http://feast-server.data-platform.svc.cluster.local:8080"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seldon-controller-manager
  namespace: seldon-system
  labels:
    app: seldon-controller-manager
    control-plane: seldon-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seldon-controller-manager
  template:
    metadata:
      labels:
        app: seldon-controller-manager
    spec:
      serviceAccountName: seldon-manager
      containers:
      - name: manager
        image: seldonio/seldon-core-operator:1.17.1
        command:
        - /manager
        args:
        - --enable-leader-election
        - --webhook-port=8443
        - --metrics-addr=:8080
        ports:
        - containerPort: 8443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_ENABLED
          value: "false"
        - name: ISTIO_ENABLED
          value: "true"
        - name: PREDICTIVE_UNIT_HTTP_SERVICE_PORT
          value: "9000"
        - name: PREDICTIVE_UNIT_GRPC_SERVICE_PORT
          value: "9500"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: cert
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: seldon-webhook-server-cert
          optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: seldon-webhook-service
  namespace: seldon-system
spec:
  ports:
  - port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app: seldon-controller-manager
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: seldon-controller-manager
  namespace: seldon-system
  labels:
    app: seldon-controller-manager
spec:
  selector:
    matchLabels:
      app: seldon-controller-manager
  endpoints:
  - port: metrics
    path: /metrics
    interval: 30s



