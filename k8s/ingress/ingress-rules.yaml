# Ingress rules for data platform services
# This file contains the ingress configurations for all deployed services

---
# DataHub Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: datahub-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - datahub.local
    secretName: datahub-tls
  rules:
  - host: datahub.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: datahub-frontend
            port:
              number: 9002
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: datahub-gms
            port:
              number: 8080

---
# Superset Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: superset-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - superset.local
    secretName: superset-tls
  rules:
  - host: superset.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: superset
            port:
              number: 8088

---
# Grafana Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - grafana.local
    secretName: grafana-tls
  rules:
  - host: grafana.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000

---
# Apache Doris Ingress (Frontend)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: doris-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - doris.local
    secretName: doris-tls
  rules:
  - host: doris.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: doris-fe-service
            port:
              number: 8030

---
# Trino Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trino-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - trino.local
    secretName: trino-tls
  rules:
  - host: trino.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: trino-coordinator
            port:
              number: 8080

# Vault Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vault-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Vault specific configuration
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - vault.local
    secretName: vault-tls
  rules:
  - host: vault.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vault
            port:
              number: 8200

---
# lakeFS Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lakefs-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - lakefs.local
    secretName: lakefs-tls
  rules:
  - host: lakefs.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lakefs
            port:
              number: 8000

---
# DolphinScheduler Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dolphinscheduler-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - dolphinscheduler.local
    - dolphinscheduler.127.0.0.1.nip.io
    secretName: dolphinscheduler-tls
  rules:
  - host: dolphinscheduler.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dolphinscheduler-api
            port:
              number: 12345
  - host: dolphinscheduler.127.0.0.1.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dolphinscheduler-api
            port:
              number: 12345

---
# MinIO Console Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-console-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - minio.local
    secretName: minio-tls
  rules:
  - host: minio.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-console
            port:
              number: 9001
