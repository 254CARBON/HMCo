# Jaeger Distributed Tracing
# All-in-one deployment for development/small production

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: istio-system
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app: jaeger

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: istio-system
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
  - name: query-http
    port: 16686
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger

---
apiVersion: v1
kind: Service
metadata:
  name: tracing
  namespace: istio-system
  labels:
    app: jaeger
spec:
  type: ClusterIP
  ports:
  - name: http-query
    port: 16686
    targetPort: 16686
  selector:
    app: jaeger

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: istio-system
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        sidecar.istio.io/inject: "false"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.51
        imagePullPolicy: IfNotPresent
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        - name: SPAN_STORAGE_TYPE
          value: "memory"
        ports:
        # Collector ports
        - containerPort: 14268
          protocol: TCP
          name: c-tchan-trft
        - containerPort: 14250
          protocol: TCP
          name: c-grpc
        - containerPort: 9411
          protocol: TCP
          name: c-zipkin
        # Query ports
        - containerPort: 16686
          protocol: TCP
          name: query
        # Agent ports
        - containerPort: 5775
          protocol: UDP
          name: a-zipkin-thrift
        - containerPort: 6831
          protocol: UDP
          name: a-jaeger-thrift
        - containerPort: 6832
          protocol: UDP
          name: a-jaeger-binary
        - containerPort: 5778
          protocol: TCP
          name: a-config
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 10
          periodSeconds: 30
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi

---
# Ingress for Jaeger UI
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger
  namespace: istio-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    portal.254carbon.com/service-id: "jaeger"
    portal.254carbon.com/service-name: "Jaeger"
    portal.254carbon.com/service-category: "monitoring"
    portal.254carbon.com/service-description: "Distributed tracing for microservices"
    portal.254carbon.com/service-icon: "üîç"
spec:
  ingressClassName: nginx
  rules:
  - host: jaeger.254carbon.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686

---
# ServiceMonitor for Prometheus integration
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: jaeger
  namespace: istio-system
  labels:
    app: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  endpoints:
  - port: query
    path: /metrics
    interval: 30s



