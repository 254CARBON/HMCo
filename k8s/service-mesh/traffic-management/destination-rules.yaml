# Destination Rules
# Configure load balancing, circuit breaking, and connection pooling

---
# Default destination rule for all services in data-platform
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: default-destination-rule
  namespace: data-platform
spec:
  host: "*.data-platform.svc.cluster.local"
  trafficPolicy:
    # Load balancing
    loadBalancer:
      simple: LEAST_REQUEST
      localityLbSetting:
        enabled: true
    
    # Connection pool settings
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 10s
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        idleTimeout: 300s
    
    # Outlier detection (circuit breaking)
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50

---
# DataHub GMS - Higher connection limits
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: datahub-gms
  namespace: data-platform
spec:
  host: datahub-gms.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      consistentHash:
        httpHeaderName: "x-datahub-session"
    connectionPool:
      tcp:
        maxConnections: 200
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
        maxRequestsPerConnection: 20
    outlierDetection:
      consecutive5xxErrors: 10
      interval: 60s
      baseEjectionTime: 60s

---
# PostgreSQL - TCP optimization
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: postgres-shared
  namespace: data-platform
spec:
  host: postgres-shared.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
    connectionPool:
      tcp:
        maxConnections: 50
        connectTimeout: 5s
        tcpKeepalive:
          time: 600s
          interval: 60s
    outlierDetection:
      consecutiveErrors: 3
      interval: 10s
      baseEjectionTime: 60s

---
# Kafka - Persistent connections
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: kafka
  namespace: data-platform
spec:
  host: kafka-service.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      consistentHash:
        httpHeaderName: "kafka-client-id"
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        tcpKeepalive:
          time: 3600s
          interval: 60s
    outlierDetection:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 120s

---
# MinIO - S3 API optimization
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: minio
  namespace: data-platform
spec:
  host: minio.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      consistentHash:
        httpHeaderName: "x-amz-request-id"
    connectionPool:
      tcp:
        maxConnections: 200
      http:
        http1MaxPendingRequests: 200
        http2MaxRequests: 400
        maxRequestsPerConnection: 50
        idleTimeout: 900s
    outlierDetection:
      consecutive5xxErrors: 10
      interval: 60s
      baseEjectionTime: 30s

---
# Trino - Query engine optimization
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: trino-coordinator
  namespace: data-platform
spec:
  host: trino-coordinator.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
        maxRequestsPerConnection: 1  # Queries are long-running
        idleTimeout: 3600s
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 60s
      baseEjectionTime: 180s

---
# DolphinScheduler API - Workflow orchestration
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: dolphinscheduler-api
  namespace: data-platform
spec:
  host: dolphinscheduler-api-service.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_REQUEST
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 60s

---
# Superset - BI tool optimization
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: superset-web
  namespace: data-platform
spec:
  host: superset-web.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      consistentHash:
        httpCookie:
          name: "session"
          ttl: 3600s
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
        idleTimeout: 600s
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 60s

---
# Elasticsearch - Search optimization
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: elasticsearch
  namespace: data-platform
spec:
  host: elasticsearch-service.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
        idleTimeout: 600s
    outlierDetection:
      consecutive5xxErrors: 10
      interval: 60s
      baseEjectionTime: 30s

---
# Redis - Cache optimization
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: redis
  namespace: data-platform
spec:
  host: redis-service.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
    connectionPool:
      tcp:
        maxConnections: 200
        connectTimeout: 3s
        tcpKeepalive:
          time: 300s
          interval: 30s
    outlierDetection:
      consecutiveErrors: 10
      interval: 10s
      baseEjectionTime: 30s

---
# MLflow - Model tracking
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: mlflow
  namespace: data-platform
spec:
  host: mlflow-service.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        idleTimeout: 600s
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 60s

---
# Iceberg REST Catalog
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: iceberg-rest-catalog
  namespace: data-platform
spec:
  host: iceberg-rest-catalog.data-platform.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 60s

---
# Monitoring services - Prometheus
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: prometheus
  namespace: monitoring
spec:
  host: prometheus.monitoring.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 50
        idleTimeout: 300s



