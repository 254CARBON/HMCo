# SeaTunnel Job: PostgreSQL CDC to Iceberg
# Change Data Capture from PostgreSQL to Iceberg

env {
  execution.parallelism = 2
  job.mode = "STREAMING"
  checkpoint.interval = 60000
}

source {
  Postgres-CDC {
    hostname = "postgres-shared-service"
    port = 5432
    username = "postgres"
    password = "datahub"
    database-names = ["datahub"]
    table-names = ["datahub.metadata_aspect"]
    result_table_name = "postgres_cdc_data"

    # CDC configuration
    slot.name = "seatunnel_postgres_slot"
    decoding.plugin.name = "pgoutput"
    startup.mode = "latest-offset"
    include-schema-change-events = true

    schema = {
      fields {
        urn = "string"
        aspect = "string"
        version = "bigint"
        metadata = "string"
        systemmetadata = "string"
        createdon = "timestamp"
        createdby = "string"
        createdfor = "string"
      }
    }
  }
}

transform {
  # Add data quality checks
  Filter {
    source_table_name = "postgres_cdc_data"
    result_table_name = "filtered_data"
    condition = "aspect IS NOT NULL AND urn IS NOT NULL"
  }

  # Validate JSON structure in metadata field
  JsonPath {
    source_table_name = "filtered_data"
    result_table_name = "validated_data"
    path = "$.metadata"
    schema_check = true
  }
}

sink {
  Iceberg {
    catalog_name = "rest"
    catalog_type = "rest"
    warehouse = "s3://iceberg-warehouse/"
    uri = "http://iceberg-rest-catalog:8181"
    database = "ods"
    table = "datahub_metadata_cdc"

    # S3/MinIO configuration
    s3.access-key-id = "minioadmin"
    s3.secret-access-key = "minioadmin123"
    s3.region = "us-east-1"
    s3.endpoint = "http://minio-service:9000"

    # Iceberg table configuration
    partition_by = ["aspect", "year(createdon)"]

    # Write options
    write_format = "parquet"
    compression_codec = "zstd"

    # Schema
    schema = {
      fields {
        urn = "string"
        aspect = "string"
        version = "bigint"
        metadata = "string"
        systemmetadata = "string"
        createdon = "timestamp"
        createdby = "string"
        createdfor = "string"
      }
    }
  }
}
