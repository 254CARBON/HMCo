# Iceberg REST Catalog deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceberg-rest-catalog
  namespace: data-platform
  labels:
    app: iceberg-rest-catalog
    component: data-lake
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iceberg-rest-catalog
  template:
    metadata:
      labels:
        app: iceberg-rest-catalog
        component: data-lake
    spec:
      imagePullSecrets: []
      containers:
      - name: iceberg-rest-catalog
        image: tabulario/iceberg-rest:0.6.1
        ports:
        - containerPort: 8181
          name: catalog-api
        env:
        # Core configuration
        - name: CATALOG_WAREHOUSE
          value: "s3://iceberg-warehouse/"
        - name: CATALOG_URI
          value: "jdbc:postgresql://postgres-shared-service:5432/iceberg_rest"
        - name: CATALOG_JDBC_USER
          value: "iceberg_user"
        - name: CATALOG_JDBC_PASSWORD
          value: "iceberg_password"
        # S3/MinIO configuration
        - name: CATALOG_S3_ENDPOINT
          value: "http://minio-service:9000"
        - name: CATALOG_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: CATALOG_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        - name: CATALOG_S3_BUCKET_NAME
          value: "iceberg-warehouse"
        - name: AWS_REGION
          value: "us-east-1"
        # Additional S3 configuration for MinIO compatibility
        - name: CATALOG_S3_PATH_STYLE_ACCESS
          value: "true"
        - name: CATALOG_S3_SIGNING_REGION
          value: "us-east-1"
        # JVM configuration
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC -XX:MaxGCPauseMillis=200"
        # Catalog properties
        - name: CATALOG_CATALOG_NAME
          value: "rest"
        - name: CATALOG_DEFAULT_NAMESPACE
          value: "default"
        # Connection pooling
        - name: CATALOG_JDBC_INITIALIZE_SQL
          value: "SELECT 1"
        resources:
          limits:
            memory: "1.5Gi"
            cpu: "750m"
          requests:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /v1/config
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v1/config
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /v1/config
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
---
# Iceberg REST Catalog Service
apiVersion: v1
kind: Service
metadata:
  name: iceberg-rest-catalog
  namespace: data-platform
  labels:
    app: iceberg-rest-catalog
spec:
  ports:
  - port: 8181
    targetPort: 8181
    name: catalog-api
  selector:
    app: iceberg-rest-catalog
  type: ClusterIP
---
# ServiceMonitor for Prometheus (optional, for monitoring)
apiVersion: v1
kind: ConfigMap
metadata:
  name: iceberg-rest-catalog-docs
  namespace: data-platform
  labels:
    app: iceberg-rest-catalog
data:
  # Documentation for the Iceberg REST Catalog configuration
  README.md: |
    # Iceberg REST Catalog Configuration
    
    ## Health Check
    ```bash
    curl http://iceberg-rest-catalog:8181/v1/config
    ```
    
    ## Namespaces and Tables API
    - GET /v1/namespaces - List all namespaces
    - POST /v1/namespaces - Create namespace
    - GET /v1/namespaces/{namespace}/tables - List tables
    - POST /v1/namespaces/{namespace}/tables - Create table
    
    ## S3/MinIO Configuration
    - Uses path-style access for MinIO compatibility
    - Bucket: iceberg-warehouse
    - Endpoint: http://minio-service:9000
    
    ## Database
    - PostgreSQL: postgres-shared-service:5432
    - Database: iceberg_rest
    - User: iceberg_user
