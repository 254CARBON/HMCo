# Network Policies for 254Carbon Data Platform
# Implements zero-trust networking model

---
# Default deny all ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all-ingress
  namespace: data-platform
spec:
  podSelector: {}
  policyTypes:
  - Ingress

---
# Allow ingress from NGINX Ingress Controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-ingress-controller
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      component: frontend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9002
    - protocol: TCP
      port: 12345

---
# Allow DataHub components to communicate
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: datahub-inter-service
  namespace: data-platform
spec:
  podSelector:
    matchExpressions:
    - key: app
      operator: In
      values:
      - datahub-gms
      - datahub-frontend
      - datahub-mae-consumer
      - datahub-mce-consumer
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - datahub-gms
          - datahub-frontend
          - datahub-mae-consumer
          - datahub-mce-consumer
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9002
    - protocol: TCP
      port: 9090

---
# Allow access to PostgreSQL
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-access
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: postgres-shared
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - datahub-gms
          - datahub-mce-consumer
          - dolphinscheduler-api
          - dolphinscheduler-master
          - dolphinscheduler-worker
          - superset-web
          - iceberg-rest-catalog
    ports:
    - protocol: TCP
      port: 5432

---
# Allow access to MinIO
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: minio-access
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: minio
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}  # Allow from all pods in namespace
    ports:
    - protocol: TCP
      port: 9000
    - protocol: TCP
      port: 9001
  - from:
    - namespaceSelector:
        matchLabels:
          name: velero
    ports:
    - protocol: TCP
      port: 9000

---
# Allow access to Kafka
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kafka-access
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: kafka
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - datahub-gms
          - datahub-mae-consumer
          - datahub-mce-consumer
    ports:
    - protocol: TCP
      port: 9092
    - protocol: TCP
      port: 9093

---
# Allow access to Elasticsearch
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: elasticsearch-access
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: elasticsearch
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - datahub-gms
          - datahub-mae-consumer
          - datahub-mce-consumer
    ports:
    - protocol: TCP
      port: 9200
    - protocol: TCP
      port: 9300

---
# Allow access to Redis
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-access
  namespace: data-platform
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}  # Allow from all pods in namespace
    ports:
    - protocol: TCP
      port: 6379

---
# Allow DNS queries
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: data-platform
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Allow egress to internet (for pulling images, external APIs)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-egress
  namespace: data-platform
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector: {}
  - to:
    - podSelector: {}
  - ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

---
# Allow monitoring scraping
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-scrape
  namespace: data-platform
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 2000

---
# DolphinScheduler inter-service communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dolphinscheduler-inter-service
  namespace: data-platform
spec:
  podSelector:
    matchExpressions:
    - key: app
      operator: In
      values:
      - dolphinscheduler-api
      - dolphinscheduler-master
      - dolphinscheduler-worker
      - dolphinscheduler-alert
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - dolphinscheduler-api
          - dolphinscheduler-master
          - dolphinscheduler-worker
          - dolphinscheduler-alert
    ports:
    - protocol: TCP
      port: 12345
    - protocol: TCP
      port: 5678
    - protocol: TCP
      port: 1234
    - protocol: TCP
      port: 50053


