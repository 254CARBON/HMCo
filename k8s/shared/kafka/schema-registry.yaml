# Schema Registry for Kafka
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: data-platform
  labels:
    app: schema-registry
    component: schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
        component: schema-registry
    spec:
      imagePullSecrets: []
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.35
        command: ['sh', '-c', "echo 'Waiting for Kafka...' && for i in {1..60}; do nc -z kafka-service 9092 && echo 'Kafka is ready!' && exit 0; sleep 2; done; echo 'Kafka startup timeout'; exit 1"]
      containers:
      - name: schema-registry
        image: confluentinc/cp-schema-registry:7.4.0
        ports:
        - containerPort: 8081
          name: schema-registry
        env:
        - name: SCHEMA_REGISTRY_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
          value: "_schemas"
        - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: SCHEMA_REGISTRY_LISTENERS
          value: "http://0.0.0.0:8081"
        - name: SCHEMA_REGISTRY_DEBUG
          value: "true"
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /subjects
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /subjects
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
---
# Schema Registry Service
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-service
  namespace: data-platform
  labels:
    app: schema-registry
spec:
  ports:
  - port: 8081
    targetPort: 8081
    name: schema-registry
  selector:
    app: schema-registry
  type: ClusterIP
