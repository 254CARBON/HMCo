# Event-Driven Architecture Dashboard for Grafana

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-event-system
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  event-system-dashboard.json: |
    {
      "dashboard": {
        "title": "254Carbon Event-Driven Architecture",
        "tags": ["kafka", "events", "254carbon"],
        "timezone": "browser",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Event Production Rate by Topic",
            "type": "graph",
            "gridPos": {"x": 0, "y": 0, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "sum(rate(kafka_producer_record_send_rate[5m])) by (topic)",
                "legendFormat": "{{topic}}"
              }
            ],
            "yaxes": [
              {"format": "events/s", "label": "Events/sec"},
              {"format": "short"}
            ]
          },
          {
            "id": 2,
            "title": "Consumer Lag by Topic",
            "type": "graph",
            "gridPos": {"x": 12, "y": 0, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "kafka_consumer_lag",
                "legendFormat": "{{topic}} - {{consumer_group}}"
              }
            ],
            "yaxes": [
              {"format": "short", "label": "Messages"},
              {"format": "short"}
            ],
            "alert": {
              "conditions": [
                {
                  "evaluator": {"params": [10000], "type": "gt"},
                  "query": {"params": ["A", "5m", "now"]},
                  "type": "query"
                }
              ],
              "name": "High Consumer Lag"
            }
          },
          {
            "id": 3,
            "title": "Event Types Distribution",
            "type": "piechart",
            "gridPos": {"x": 0, "y": 8, "w": 6, "h": 8},
            "targets": [
              {
                "expr": "sum(kafka_producer_record_send_total) by (topic)",
                "legendFormat": "{{topic}}"
              }
            ]
          },
          {
            "id": 4,
            "title": "Failed Event Deliveries",
            "type": "graph",
            "gridPos": {"x": 6, "y": 8, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "sum(rate(kafka_producer_record_error_rate[5m])) by (topic)",
                "legendFormat": "{{topic}}"
              }
            ],
            "yaxes": [
              {"format": "errors/s", "label": "Errors/sec"},
              {"format": "short"}
            ]
          },
          {
            "id": 5,
            "title": "Kafka Broker Status",
            "type": "table",
            "gridPos": {"x": 0, "y": 16, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "kafka_server_replicamanager_underreplicatedpartitions",
                "format": "table",
                "instant": true
              }
            ]
          },
          {
            "id": 6,
            "title": "Topic Retention and Size",
            "type": "table",
            "gridPos": {"x": 12, "y": 16, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "kafka_log_logendoffset",
                "format": "table",
                "instant": true
              }
            ]
          },
          {
            "id": 7,
            "title": "Event Processing Latency",
            "type": "graph",
            "gridPos": {"x": 0, "y": 24, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "histogram_quantile(0.99, sum(rate(kafka_consumer_fetch_latency_bucket[5m])) by (consumer_group, le))",
                "legendFormat": "{{consumer_group}} P99"
              }
            ],
            "yaxes": [
              {"format": "ms", "label": "Latency"},
              {"format": "short"}
            ]
          },
          {
            "id": 8,
            "title": "Data Events (Ingestion, Quality, Lineage)",
            "type": "timeseries",
            "gridPos": {"x": 12, "y": 24, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "sum(rate(kafka_producer_record_send_rate{topic=~\"data-.*\"}[5m])) by (topic)",
                "legendFormat": "{{topic}}"
              }
            ]
          },
          {
            "id": 9,
            "title": "Audit Events (User Actions, API Calls)",
            "type": "timeseries",
            "gridPos": {"x": 0, "y": 32, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "sum(rate(kafka_producer_record_send_rate{topic=~\"audit-.*\"}[5m])) by (topic)",
                "legendFormat": "{{topic}}"
              }
            ]
          },
          {
            "id": 10,
            "title": "System Events (Health, Deployments, Config)",
            "type": "timeseries",
            "gridPos": {"x": 12, "y": 32, "w": 12, "h": 8},
            "targets": [
              {
                "expr": "sum(rate(kafka_producer_record_send_rate{topic=~\"system-.*|deployment-.*|config-.*|security-.*\"}[5m])) by (topic)",
                "legendFormat": "{{topic}}"
              }
            ]
          }
        ]
      }
    }



