# Velero Backup Monitoring
# Prometheus rules and ServiceMonitor for backup health

---
apiVersion: v1
kind: Service
metadata:
  name: velero-metrics
  namespace: velero
  labels:
    app: velero
spec:
  selector:
    name: velero
  ports:
  - name: metrics
    port: 8085
    targetPort: 8085
  type: ClusterIP

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: velero
  namespace: velero
  labels:
    app: velero
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: velero
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: velero-backup-alerts
  namespace: monitoring
  labels:
    prometheus: kube-prometheus-stack-prometheus
    role: alert-rules
spec:
  groups:
  - name: velero-backup
    interval: 5m
    rules:
    - alert: VeleroBackupFailed
      expr: velero_backup_failure_total > 0
      for: 5m
      labels:
        severity: critical
        component: backup
      annotations:
        summary: "Velero backup failed"
        description: "Backup {{ $labels.schedule }} has failed {{ $value }} times"
        runbook_url: "https://docs.254carbon.com/runbooks/velero-backup-failure"
    
    - alert: VeleroBackupPartialFailure
      expr: velero_backup_partial_failure_total > 0
      for: 10m
      labels:
        severity: warning
        component: backup
      annotations:
        summary: "Velero backup partially failed"
        description: "Backup {{ $labels.schedule }} had {{ $value }} partial failures"
        runbook_url: "https://docs.254carbon.com/runbooks/velero-partial-failure"
    
    - alert: VeleroBackupTooOld
      expr: |
        (time() - velero_backup_last_successful_timestamp{schedule="daily-backup"}) > 172800
      for: 1h
      labels:
        severity: warning
        component: backup
      annotations:
        summary: "Daily backup is too old"
        description: "Last successful daily backup was {{ $value | humanizeDuration }} ago"
        runbook_url: "https://docs.254carbon.com/runbooks/backup-too-old"
    
    - alert: VeleroBackupDurationLong
      expr: velero_backup_duration_seconds > 1800
      for: 5m
      labels:
        severity: warning
        component: backup
      annotations:
        summary: "Backup taking too long"
        description: "Backup {{ $labels.schedule }} took {{ $value }}s (>30min)"
        runbook_url: "https://docs.254carbon.com/runbooks/slow-backup"
    
    - alert: VeleroBackupStorageLow
      expr: |
        (minio_bucket_usage_total_bytes{bucket="velero-backups"} / 
         minio_cluster_capacity_usable_free_bytes) > 0.8
      for: 30m
      labels:
        severity: warning
        component: backup
      annotations:
        summary: "Backup storage running low"
        description: "Velero backup storage is {{ $value | humanizePercentage }} full"
        runbook_url: "https://docs.254carbon.com/runbooks/backup-storage-full"
    
    - alert: VeleroRestoreFailed
      expr: velero_restore_failed_total > 0
      for: 5m
      labels:
        severity: critical
        component: backup
      annotations:
        summary: "Velero restore operation failed"
        description: "Restore operation has failed {{ $value }} times"
        runbook_url: "https://docs.254carbon.com/runbooks/restore-failure"

---
# CronJob to verify backups regularly
apiVersion: batch/v1
kind: CronJob
metadata:
  name: verify-backups
  namespace: velero
  labels:
    app: backup-verification
spec:
  schedule: "0 6 * * *"  # Daily at 6 AM UTC
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: velero
          restartPolicy: Never
          containers:
          - name: verify
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              echo "===== Daily Backup Verification ====="
              echo ""
              
              # Check if daily backup ran
              LATEST_DAILY=$(~/bin/velero backup get | grep daily-backup | grep Completed | head -1 | awk '{print $1}')
              
              if [ -z "$LATEST_DAILY" ]; then
                echo "❌ ERROR: No completed daily backup found!"
                exit 1
              fi
              
              echo "✓ Latest daily backup: $LATEST_DAILY"
              
              # Check backup age
              BACKUP_TIME=$(~/bin/velero backup describe $LATEST_DAILY | grep Completed | awk '{print $2,$3,$4,$5,$6}')
              echo "✓ Backup completed: $BACKUP_TIME"
              
              # Check for errors
              ERRORS=$(~/bin/velero backup describe $LATEST_DAILY | grep "Errors:" | awk '{print $2}')
              
              if [ "$ERRORS" != "0" ]; then
                echo "⚠️  WARNING: Backup has $ERRORS errors"
                exit 1
              fi
              
              echo "✓ Backup has no errors"
              echo ""
              echo "===== Verification Complete ====="
            volumeMounts:
            - name: velero-cli
              mountPath: /root/bin
          volumes:
          - name: velero-cli
            hostPath:
              path: /home/m/bin
              type: Directory




