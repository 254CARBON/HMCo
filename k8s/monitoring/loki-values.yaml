## Loki stack tuned configuration
# Persistent single-binary Loki with compaction+retention and Promtail shipping.

loki:
  image:
    tag: 2.9.0
  auth_enabled: false
  isDefault: true
  replicas: 1
  persistence:
    enabled: true
    storageClassName: local-storage-standard
    accessModes: ["ReadWriteOnce"]
    size: 100Gi
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  config:
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    schema_config:
      configs:
        - from: 2023-01-01
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/index
        cache_location: /loki/cache
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks
    compactor:
      working_directory: /loki/compactor
      shared_store: filesystem
      compaction_interval: 5m
      retention_enabled: true
    limits_config:
      max_streams_per_user: 500000
      max_label_names_per_series: 40
      max_entries_limit_per_query: 5000
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      retention_period: 336h  # 14 days
    chunk_store_config:
      max_look_back_period: 0s
    ruler:
      alertmanager_url: http://alertmanager-operated.monitoring.svc:9093
      enable_api: true
      storage:
        type: local
        local:
          directory: /loki/rules

promtail:
  enabled: true
  tolerations:
    - operator: "Exists"
      effect: "NoSchedule"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 250m
      memory: 512Mi
  config:
    server:
      http_listen_port: 9080
      grpc_listen_port: 9095
    clients:
      - url: http://loki:3100/loki/api/v1/push
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - docker: {}
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: __host__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - action: replace
            source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_uid,__meta_kubernetes_pod_container_name]
            target_label: __path__
        # Optional: exclude very noisy namespaces
        # relabel_configs:
        #   - action: drop
        #     source_labels: [__meta_kubernetes_namespace]
        #     regex: kube-system

prometheusRule:
  enabled: false  # keep rules defined in repo CRs

