# Kubernetes Job to automatically import Superset dashboards
# This job runs after Superset deployment and imports dashboard definitions
# from the superset-commodity-dashboards ConfigMap

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: superset-import
  namespace: data-platform
  labels:
    app: superset
    component: dashboard-import

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: superset-import
  namespace: data-platform
  labels:
    app: superset
    component: dashboard-import
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: superset-import
  namespace: data-platform
  labels:
    app: superset
    component: dashboard-import
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: superset-import
subjects:
  - kind: ServiceAccount
    name: superset-import
    namespace: data-platform

---
apiVersion: batch/v1
kind: Job
metadata:
  name: superset-dashboard-import
  namespace: data-platform
  labels:
    app: superset
    component: dashboard-import
    automation: setup
spec:
  # Keep successful pods for review
  ttlSecondsAfterFinished: 86400  # 24 hours
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: superset-dashboard-import
        component: dashboard-import
    spec:
      restartPolicy: OnFailure
      serviceAccountName: superset-import
      
      # Init container to wait for Superset
      initContainers:
      - name: wait-for-superset
        image: curlimages/curl:latest
        command:
        - sh
        - -c
        - |
          echo "Waiting for Superset to be ready..."
          MAX_WAIT=300
          ELAPSED=0
          until curl -sf http://superset:8088/health > /dev/null; do
            if [ $ELAPSED -ge $MAX_WAIT ]; then
              echo "Timeout waiting for Superset"
              exit 1
            fi
            echo "Superset not ready, waiting... (${ELAPSED}s/${MAX_WAIT}s)"
            sleep 10
            ELAPSED=$((ELAPSED + 10))
          done
          echo "Superset is ready!"
      
      containers:
      - name: import-dashboards
        image: python:3.11-slim
        command:
        - /bin/bash
        - -c
        - |
          set -e
          
          echo "Installing dependencies..."
          apt-get update -qq && apt-get install -y -qq curl jq > /dev/null 2>&1
          
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/
          
          echo "Running dashboard import script..."
          python3 /scripts/import-superset-dashboards.py \
            --superset-url http://superset:8088 \
            --username admin \
            --password admin \
            --namespace data-platform \
            --configmap superset-commodity-dashboards \
            --setup-databases
          
          echo "Dashboard import completed!"
        
        env:
        - name: SUPERSET_URL
          value: "http://superset:8088"
        
        volumeMounts:
        - name: import-script
          mountPath: /scripts
          readOnly: true
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      
      volumes:
      - name: import-script
        configMap:
          name: automation-scripts
          items:
          - key: import-superset-dashboards.py
            path: import-superset-dashboards.py
          defaultMode: 0755


