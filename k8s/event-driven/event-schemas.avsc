// Avro Event Schemas for 254Carbon Platform
// Register with Schema Registry

// Base Event Schema
{
  "type": "record",
  "name": "BaseEvent",
  "namespace": "com.carbon254.events",
  "doc": "Base event schema for all 254Carbon events",
  "fields": [
    {
      "name": "eventId",
      "type": "string",
      "doc": "Unique identifier for this event (UUID)"
    },
    {
      "name": "eventType",
      "type": "string",
      "doc": "Type of event (e.g., DataIngestionComplete, ServiceHealthChanged)"
    },
    {
      "name": "timestamp",
      "type": "long",
      "doc": "Event timestamp in milliseconds since epoch"
    },
    {
      "name": "source",
      "type": "string",
      "doc": "Service that generated this event"
    },
    {
      "name": "version",
      "type": "string",
      "default": "1.0.0",
      "doc": "Event schema version"
    },
    {
      "name": "correlationId",
      "type": ["null", "string"],
      "default": null,
      "doc": "Correlation ID for tracking related events"
    },
    {
      "name": "causationId",
      "type": ["null", "string"],
      "default": null,
      "doc": "ID of the event that caused this event"
    }
  ]
}

// Data Ingestion Event
{
  "type": "record",
  "name": "DataIngestionEvent",
  "namespace": "com.carbon254.events.data",
  "doc": "Event emitted when data ingestion completes",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "source", "type": "string"},
    {"name": "datasetName", "type": "string", "doc": "Name of the ingested dataset"},
    {"name": "recordCount", "type": "long", "doc": "Number of records ingested"},
    {"name": "sizeBytes", "type": "long", "doc": "Size of data in bytes"},
    {"name": "format", "type": "string", "doc": "Data format (parquet, csv, json, etc.)"},
    {"name": "location", "type": "string", "doc": "S3/MinIO location of the data"},
    {
      "name": "status",
      "type": {
        "type": "enum",
        "name": "IngestionStatus",
        "symbols": ["SUCCESS", "FAILURE", "PARTIAL"]
      },
      "doc": "Status of the ingestion"
    },
    {
      "name": "metadata",
      "type": {"type": "map", "values": "string"},
      "default": {},
      "doc": "Additional metadata"
    }
  ]
}

// Data Quality Event
{
  "type": "record",
  "name": "DataQualityEvent",
  "namespace": "com.carbon254.events.data",
  "doc": "Event emitted when data quality check completes",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "source", "type": "string"},
    {"name": "datasetName", "type": "string"},
    {"name": "checkType", "type": "string", "doc": "Type of quality check (completeness, validity, etc.)"},
    {"name": "checkName", "type": "string", "doc": "Name of the specific check"},
    {
      "name": "result",
      "type": {
        "type": "enum",
        "name": "QualityResult",
        "symbols": ["PASS", "FAIL", "WARNING"]
      }
    },
    {"name": "score", "type": "double", "doc": "Quality score (0.0 to 1.0)"},
    {"name": "failedRecords", "type": "long", "doc": "Number of records that failed"},
    {"name": "totalRecords", "type": "long", "doc": "Total number of records checked"},
    {"name": "message", "type": ["null", "string"], "default": null}
  ]
}

// Service Health Event
{
  "type": "record",
  "name": "ServiceHealthEvent",
  "namespace": "com.carbon254.events.system",
  "doc": "Event emitted when service health status changes",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "serviceName", "type": "string"},
    {"name": "namespace", "type": "string"},
    {
      "name": "healthStatus",
      "type": {
        "type": "enum",
        "name": "HealthStatus",
        "symbols": ["HEALTHY", "DEGRADED", "UNHEALTHY", "UNKNOWN"]
      }
    },
    {"name": "latencyMs", "type": "long", "doc": "Current latency in milliseconds"},
    {"name": "errorRate", "type": "double", "doc": "Error rate (0.0 to 1.0)"},
    {"name": "message", "type": ["null", "string"], "default": null}
  ]
}

// Deployment Event
{
  "type": "record",
  "name": "DeploymentEvent",
  "namespace": "com.carbon254.events.system",
  "doc": "Event emitted for deployments and rollbacks",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "source", "type": "string"},
    {"name": "deploymentName", "type": "string"},
    {"name": "namespace", "type": "string"},
    {
      "name": "action",
      "type": {
        "type": "enum",
        "name": "DeploymentAction",
        "symbols": ["DEPLOY", "ROLLBACK", "SCALE", "RESTART"]
      }
    },
    {"name": "version", "type": "string", "doc": "Version being deployed"},
    {"name": "previousVersion", "type": ["null", "string"], "default": null},
    {"name": "replicas", "type": "int"},
    {"name": "deployedBy", "type": "string", "doc": "User who triggered deployment"}
  ]
}

// Audit User Action Event
{
  "type": "record",
  "name": "AuditUserActionEvent",
  "namespace": "com.carbon254.events.audit",
  "doc": "Event for auditing user actions",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "userId", "type": "string"},
    {"name": "username", "type": "string"},
    {"name": "action", "type": "string", "doc": "Action performed"},
    {"name": "resource", "type": "string", "doc": "Resource being acted upon"},
    {"name": "resourceType", "type": "string"},
    {
      "name": "result",
      "type": {
        "type": "enum",
        "name": "ActionResult",
        "symbols": ["SUCCESS", "FAILURE", "DENIED"]
      }
    },
    {"name": "ipAddress", "type": "string"},
    {"name": "userAgent", "type": ["null", "string"], "default": null},
    {
      "name": "details",
      "type": {"type": "map", "values": "string"},
      "default": {}
    }
  ]
}

// Audit API Call Event
{
  "type": "record",
  "name": "AuditAPICallEvent",
  "namespace": "com.carbon254.events.audit",
  "doc": "Event for auditing API calls",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "service", "type": "string", "doc": "Service receiving the API call"},
    {"name": "endpoint", "type": "string", "doc": "API endpoint path"},
    {"name": "method", "type": "string", "doc": "HTTP method"},
    {"name": "statusCode", "type": "int", "doc": "HTTP status code"},
    {"name": "latencyMs", "type": "long", "doc": "Request latency"},
    {"name": "requestSizeBytes", "type": "long"},
    {"name": "responseSizeBytes", "type": "long"},
    {"name": "userId", "type": ["null", "string"], "default": null},
    {"name": "apiKey", "type": ["null", "string"], "default": null},
    {"name": "ipAddress", "type": "string"},
    {"name": "errorMessage", "type": ["null", "string"], "default": null}
  ]
}

// Data Lineage Event
{
  "type": "record",
  "name": "DataLineageEvent",
  "namespace": "com.carbon254.events.data",
  "doc": "Event for tracking data lineage",
  "fields": [
    {"name": "eventId", "type": "string"},
    {"name": "timestamp", "type": "long"},
    {"name": "source", "type": "string"},
    {"name": "sourceDataset", "type": "string"},
    {"name": "targetDataset", "type": "string"},
    {
      "name": "transformationType",
      "type": {
        "type": "enum",
        "name": "TransformationType",
        "symbols": ["COPY", "TRANSFORM", "AGGREGATE", "JOIN", "FILTER"]
      }
    },
    {"name": "transformationName", "type": "string"},
    {"name": "query", "type": ["null", "string"], "default": null},
    {
      "name": "columns",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "ColumnLineage",
          "fields": [
            {"name": "sourceColumn", "type": "string"},
            {"name": "targetColumn", "type": "string"},
            {"name": "transformation", "type": ["null", "string"], "default": null}
          ]
        }
      },
      "default": []
    }
  ]
}



