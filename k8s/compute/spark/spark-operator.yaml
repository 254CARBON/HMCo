# Spark Job Runner deployment for running Spark applications
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-job-runner
  namespace: data-platform
  labels:
    app: spark-job-runner
    component: compute
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark-job-runner
  template:
    metadata:
      labels:
        app: spark-job-runner
        component: compute
    spec:
      serviceAccountName: spark-runner
      containers:
      - name: spark-runner
        image: apache/spark:3.5.0
        command: ["/bin/bash"]
        args: ["-c", "while true; do sleep 30; done"]
        ports:
        - containerPort: 8080
          name: spark-ui
        env:
        - name: SPARK_MODE
          value: "master"
        - name: SPARK_RPC_AUTHENTICATION_ENABLED
          value: "no"
        - name: SPARK_RPC_ENCRYPTION_ENABLED
          value: "no"
        - name: SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED
          value: "no"
        - name: SPARK_SSL_ENABLED
          value: "no"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: secret-key
        - name: S3_ENDPOINT
          value: "http://minio-service:9000"
        volumeMounts:
        - name: spark-logs
          mountPath: /opt/spark/work
        - name: spark-conf
          mountPath: /opt/spark/conf
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: spark-logs
        emptyDir:
          sizeLimit: 10Gi
      - name: spark-conf
        configMap:
          name: spark-defaults
---
# Spark Job Runner Service
apiVersion: v1
kind: Service
metadata:
  name: spark-job-runner
  namespace: data-platform
  labels:
    app: spark-job-runner
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: spark-ui
  selector:
    app: spark-job-runner
  type: ClusterIP
---
# Spark Job Runner Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark-runner
  namespace: data-platform
  labels:
    app: spark-runner
---
# Role for Spark Runner
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-runner
  namespace: data-platform
  labels:
    app: spark-runner
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/exec
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
---
# RoleBinding for Spark Runner
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-runner
  namespace: data-platform
  labels:
    app: spark-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spark-runner
subjects:
- kind: ServiceAccount
  name: spark-runner
  namespace: data-platform
